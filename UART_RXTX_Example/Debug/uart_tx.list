
uart_tx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001228  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  080013f8  080013f8  000023f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001454  08001454  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800145c  0800145c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800145c  0800145c  0000245c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001460  08001460  00002460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001464  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080014c0  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080014c0  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000cc7  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000429  00000000  00000000  00003d53  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00004180  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d7  00000000  00000000  000042b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a724  00000000  00000000  0000438f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000186f  00000000  00000000  0001eab3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009057d  00000000  00000000  00020322  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b089f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b98  00000000  00000000  000b08e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000047  00000000  00000000  000b147c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013e0 	.word	0x080013e0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	080013e0 	.word	0x080013e0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <uart2_write>:
#define CR1_TE        (1U << 3)
#define CR1_UE        (1U << 13)
#define SR_TXE        (1U << 7)

void uart2_write(int ch)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
    // Make sure transmit data register is empty
    while(!(USART2->SR & SR_TXE)) {}
 80002b8:	bf00      	nop
 80002ba:	4b08      	ldr	r3, [pc, #32]	@ (80002dc <uart2_write+0x2c>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <uart2_write+0xa>
    // Write to transmit data register
    USART2->DR = (ch & 0xFF);
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a04      	ldr	r2, [pc, #16]	@ (80002dc <uart2_write+0x2c>)
 80002ca:	b2db      	uxtb	r3, r3
 80002cc:	6053      	str	r3, [r2, #4]
}
 80002ce:	bf00      	nop
 80002d0:	370c      	adds	r7, #12
 80002d2:	46bd      	mov	sp, r7
 80002d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	40004400 	.word	0x40004400

080002e0 <__io_putchar>:

int __io_putchar(int ch)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b082      	sub	sp, #8
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
    uart2_write(ch);
 80002e8:	6878      	ldr	r0, [r7, #4]
 80002ea:	f7ff ffe1 	bl	80002b0 <uart2_write>
    return ch;
 80002ee:	687b      	ldr	r3, [r7, #4]
}
 80002f0:	4618      	mov	r0, r3
 80002f2:	3708      	adds	r7, #8
 80002f4:	46bd      	mov	sp, r7
 80002f6:	bd80      	pop	{r7, pc}

080002f8 <compute_uart_baud_rate>:

static uint16_t compute_uart_baud_rate(uint32_t peripheral_clock, uint32_t baud_rate)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
 8000300:	6039      	str	r1, [r7, #0]
    return (peripheral_clock + (baud_rate / 2U)) / baud_rate;
 8000302:	683b      	ldr	r3, [r7, #0]
 8000304:	085a      	lsrs	r2, r3, #1
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	441a      	add	r2, r3
 800030a:	683b      	ldr	r3, [r7, #0]
 800030c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000310:	b29b      	uxth	r3, r3
}
 8000312:	4618      	mov	r0, r3
 8000314:	370c      	adds	r7, #12
 8000316:	46bd      	mov	sp, r7
 8000318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031c:	4770      	bx	lr

0800031e <uart_set_baud_rate>:

static void uart_set_baud_rate(USART_TypeDef* usart_tx, uint32_t peripheral_clock, uint32_t baud_rate)
{
 800031e:	b580      	push	{r7, lr}
 8000320:	b084      	sub	sp, #16
 8000322:	af00      	add	r7, sp, #0
 8000324:	60f8      	str	r0, [r7, #12]
 8000326:	60b9      	str	r1, [r7, #8]
 8000328:	607a      	str	r2, [r7, #4]
    usart_tx->BRR = compute_uart_baud_rate(peripheral_clock, baud_rate);
 800032a:	6879      	ldr	r1, [r7, #4]
 800032c:	68b8      	ldr	r0, [r7, #8]
 800032e:	f7ff ffe3 	bl	80002f8 <compute_uart_baud_rate>
 8000332:	4603      	mov	r3, r0
 8000334:	461a      	mov	r2, r3
 8000336:	68fb      	ldr	r3, [r7, #12]
 8000338:	609a      	str	r2, [r3, #8]
}
 800033a:	bf00      	nop
 800033c:	3710      	adds	r7, #16
 800033e:	46bd      	mov	sp, r7
 8000340:	bd80      	pop	{r7, pc}
	...

08000344 <uart2_tx_init>:



void uart2_tx_init( )
{
 8000344:	b580      	push	{r7, lr}
 8000346:	af00      	add	r7, sp, #0
    // Enable Clock access to GPIOA
    RCC->AHB1ENR |= GPIOA_EN;
 8000348:	4b1a      	ldr	r3, [pc, #104]	@ (80003b4 <uart2_tx_init+0x70>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a19      	ldr	r2, [pc, #100]	@ (80003b4 <uart2_tx_init+0x70>)
 800034e:	f043 0301 	orr.w	r3, r3, #1
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30

    // Set PA2 Mode to Alternate Function Mode
    GPIOA->MODER &= ~(3U << 4);     // Clear bits 4 and 5
 8000354:	4b18      	ldr	r3, [pc, #96]	@ (80003b8 <uart2_tx_init+0x74>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a17      	ldr	r2, [pc, #92]	@ (80003b8 <uart2_tx_init+0x74>)
 800035a:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 800035e:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= (2U << 4);      // Set bits 4 and 5 to 10 (Alternate Function)
 8000360:	4b15      	ldr	r3, [pc, #84]	@ (80003b8 <uart2_tx_init+0x74>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	4a14      	ldr	r2, [pc, #80]	@ (80003b8 <uart2_tx_init+0x74>)
 8000366:	f043 0320 	orr.w	r3, r3, #32
 800036a:	6013      	str	r3, [r2, #0]

    // Set PA2 Alternate Function type to UART TX (AF07)
    GPIOA->AFR[0] &= ~(0xF << 8);     // Clear bits 8-11
 800036c:	4b12      	ldr	r3, [pc, #72]	@ (80003b8 <uart2_tx_init+0x74>)
 800036e:	6a1b      	ldr	r3, [r3, #32]
 8000370:	4a11      	ldr	r2, [pc, #68]	@ (80003b8 <uart2_tx_init+0x74>)
 8000372:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8000376:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |= (7U << 8);       // Set bits 8-11 to 0111 (AF7 for USART2)
 8000378:	4b0f      	ldr	r3, [pc, #60]	@ (80003b8 <uart2_tx_init+0x74>)
 800037a:	6a1b      	ldr	r3, [r3, #32]
 800037c:	4a0e      	ldr	r2, [pc, #56]	@ (80003b8 <uart2_tx_init+0x74>)
 800037e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8000382:	6213      	str	r3, [r2, #32]

    // Enable clock access to UART2
    RCC->APB1ENR |= USART2_EN;
 8000384:	4b0b      	ldr	r3, [pc, #44]	@ (80003b4 <uart2_tx_init+0x70>)
 8000386:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000388:	4a0a      	ldr	r2, [pc, #40]	@ (80003b4 <uart2_tx_init+0x70>)
 800038a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800038e:	6413      	str	r3, [r2, #64]	@ 0x40

    // Configure UART Baudrate
    uart_set_baud_rate(USART2, APB1_CLK, UART_BAUDRATE);
 8000390:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000394:	4909      	ldr	r1, [pc, #36]	@ (80003bc <uart2_tx_init+0x78>)
 8000396:	480a      	ldr	r0, [pc, #40]	@ (80003c0 <uart2_tx_init+0x7c>)
 8000398:	f7ff ffc1 	bl	800031e <uart_set_baud_rate>

    // Configure transfer direction
    USART2->CR1 = CR1_TE;
 800039c:	4b08      	ldr	r3, [pc, #32]	@ (80003c0 <uart2_tx_init+0x7c>)
 800039e:	2208      	movs	r2, #8
 80003a0:	60da      	str	r2, [r3, #12]

    // Enable the UART module
    USART2->CR1 |= CR1_UE;
 80003a2:	4b07      	ldr	r3, [pc, #28]	@ (80003c0 <uart2_tx_init+0x7c>)
 80003a4:	68db      	ldr	r3, [r3, #12]
 80003a6:	4a06      	ldr	r2, [pc, #24]	@ (80003c0 <uart2_tx_init+0x7c>)
 80003a8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80003ac:	60d3      	str	r3, [r2, #12]
}
 80003ae:	bf00      	nop
 80003b0:	bd80      	pop	{r7, pc}
 80003b2:	bf00      	nop
 80003b4:	40023800 	.word	0x40023800
 80003b8:	40020000 	.word	0x40020000
 80003bc:	00f42400 	.word	0x00f42400
 80003c0:	40004400 	.word	0x40004400

080003c4 <main>:

int main(void)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b082      	sub	sp, #8
 80003c8:	af00      	add	r7, sp, #0
    uart2_tx_init( );
 80003ca:	f7ff ffbb 	bl	8000344 <uart2_tx_init>

    while(1)
    {
       int x = 15;
 80003ce:	230f      	movs	r3, #15
 80003d0:	607b      	str	r3, [r7, #4]
       printf("This is a good number, am i right? %d" ,x);
 80003d2:	6879      	ldr	r1, [r7, #4]
 80003d4:	4802      	ldr	r0, [pc, #8]	@ (80003e0 <main+0x1c>)
 80003d6:	f000 f995 	bl	8000704 <iprintf>
    {
 80003da:	bf00      	nop
 80003dc:	e7f7      	b.n	80003ce <main+0xa>
 80003de:	bf00      	nop
 80003e0:	080013f8 	.word	0x080013f8

080003e4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	60f8      	str	r0, [r7, #12]
 80003ec:	60b9      	str	r1, [r7, #8]
 80003ee:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f0:	2300      	movs	r3, #0
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	e00a      	b.n	800040c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003f6:	f3af 8000 	nop.w
 80003fa:	4601      	mov	r1, r0
 80003fc:	68bb      	ldr	r3, [r7, #8]
 80003fe:	1c5a      	adds	r2, r3, #1
 8000400:	60ba      	str	r2, [r7, #8]
 8000402:	b2ca      	uxtb	r2, r1
 8000404:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	697b      	ldr	r3, [r7, #20]
 8000408:	3301      	adds	r3, #1
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	697a      	ldr	r2, [r7, #20]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	429a      	cmp	r2, r3
 8000412:	dbf0      	blt.n	80003f6 <_read+0x12>
  }

  return len;
 8000414:	687b      	ldr	r3, [r7, #4]
}
 8000416:	4618      	mov	r0, r3
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}

0800041e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800041e:	b580      	push	{r7, lr}
 8000420:	b086      	sub	sp, #24
 8000422:	af00      	add	r7, sp, #0
 8000424:	60f8      	str	r0, [r7, #12]
 8000426:	60b9      	str	r1, [r7, #8]
 8000428:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042a:	2300      	movs	r3, #0
 800042c:	617b      	str	r3, [r7, #20]
 800042e:	e009      	b.n	8000444 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	1c5a      	adds	r2, r3, #1
 8000434:	60ba      	str	r2, [r7, #8]
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	4618      	mov	r0, r3
 800043a:	f7ff ff51 	bl	80002e0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043e:	697b      	ldr	r3, [r7, #20]
 8000440:	3301      	adds	r3, #1
 8000442:	617b      	str	r3, [r7, #20]
 8000444:	697a      	ldr	r2, [r7, #20]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	429a      	cmp	r2, r3
 800044a:	dbf1      	blt.n	8000430 <_write+0x12>
  }
  return len;
 800044c:	687b      	ldr	r3, [r7, #4]
}
 800044e:	4618      	mov	r0, r3
 8000450:	3718      	adds	r7, #24
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <_close>:

int _close(int file)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800045e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000462:	4618      	mov	r0, r3
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr

0800046e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800046e:	b480      	push	{r7}
 8000470:	b083      	sub	sp, #12
 8000472:	af00      	add	r7, sp, #0
 8000474:	6078      	str	r0, [r7, #4]
 8000476:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000478:	683b      	ldr	r3, [r7, #0]
 800047a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800047e:	605a      	str	r2, [r3, #4]
  return 0;
 8000480:	2300      	movs	r3, #0
}
 8000482:	4618      	mov	r0, r3
 8000484:	370c      	adds	r7, #12
 8000486:	46bd      	mov	sp, r7
 8000488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048c:	4770      	bx	lr

0800048e <_isatty>:

int _isatty(int file)
{
 800048e:	b480      	push	{r7}
 8000490:	b083      	sub	sp, #12
 8000492:	af00      	add	r7, sp, #0
 8000494:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000496:	2301      	movs	r3, #1
}
 8000498:	4618      	mov	r0, r3
 800049a:	370c      	adds	r7, #12
 800049c:	46bd      	mov	sp, r7
 800049e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a2:	4770      	bx	lr

080004a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004a4:	b480      	push	{r7}
 80004a6:	b085      	sub	sp, #20
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	60f8      	str	r0, [r7, #12]
 80004ac:	60b9      	str	r1, [r7, #8]
 80004ae:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004b0:	2300      	movs	r3, #0
}
 80004b2:	4618      	mov	r0, r3
 80004b4:	3714      	adds	r7, #20
 80004b6:	46bd      	mov	sp, r7
 80004b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004bc:	4770      	bx	lr
	...

080004c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b086      	sub	sp, #24
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004c8:	4a14      	ldr	r2, [pc, #80]	@ (800051c <_sbrk+0x5c>)
 80004ca:	4b15      	ldr	r3, [pc, #84]	@ (8000520 <_sbrk+0x60>)
 80004cc:	1ad3      	subs	r3, r2, r3
 80004ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d0:	697b      	ldr	r3, [r7, #20]
 80004d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004d4:	4b13      	ldr	r3, [pc, #76]	@ (8000524 <_sbrk+0x64>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	2b00      	cmp	r3, #0
 80004da:	d102      	bne.n	80004e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004dc:	4b11      	ldr	r3, [pc, #68]	@ (8000524 <_sbrk+0x64>)
 80004de:	4a12      	ldr	r2, [pc, #72]	@ (8000528 <_sbrk+0x68>)
 80004e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004e2:	4b10      	ldr	r3, [pc, #64]	@ (8000524 <_sbrk+0x64>)
 80004e4:	681a      	ldr	r2, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4413      	add	r3, r2
 80004ea:	693a      	ldr	r2, [r7, #16]
 80004ec:	429a      	cmp	r2, r3
 80004ee:	d207      	bcs.n	8000500 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f0:	f000 f9ac 	bl	800084c <__errno>
 80004f4:	4603      	mov	r3, r0
 80004f6:	220c      	movs	r2, #12
 80004f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004fa:	f04f 33ff 	mov.w	r3, #4294967295
 80004fe:	e009      	b.n	8000514 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000500:	4b08      	ldr	r3, [pc, #32]	@ (8000524 <_sbrk+0x64>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000506:	4b07      	ldr	r3, [pc, #28]	@ (8000524 <_sbrk+0x64>)
 8000508:	681a      	ldr	r2, [r3, #0]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	4413      	add	r3, r2
 800050e:	4a05      	ldr	r2, [pc, #20]	@ (8000524 <_sbrk+0x64>)
 8000510:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000512:	68fb      	ldr	r3, [r7, #12]
}
 8000514:	4618      	mov	r0, r3
 8000516:	3718      	adds	r7, #24
 8000518:	46bd      	mov	sp, r7
 800051a:	bd80      	pop	{r7, pc}
 800051c:	20020000 	.word	0x20020000
 8000520:	00000400 	.word	0x00000400
 8000524:	20000078 	.word	0x20000078
 8000528:	200001c8 	.word	0x200001c8

0800052c <Reset_Handler>:
 800052c:	480d      	ldr	r0, [pc, #52]	@ (8000564 <LoopForever+0x2>)
 800052e:	4685      	mov	sp, r0
 8000530:	f3af 8000 	nop.w
 8000534:	480c      	ldr	r0, [pc, #48]	@ (8000568 <LoopForever+0x6>)
 8000536:	490d      	ldr	r1, [pc, #52]	@ (800056c <LoopForever+0xa>)
 8000538:	4a0d      	ldr	r2, [pc, #52]	@ (8000570 <LoopForever+0xe>)
 800053a:	2300      	movs	r3, #0
 800053c:	e002      	b.n	8000544 <LoopCopyDataInit>

0800053e <CopyDataInit>:
 800053e:	58d4      	ldr	r4, [r2, r3]
 8000540:	50c4      	str	r4, [r0, r3]
 8000542:	3304      	adds	r3, #4

08000544 <LoopCopyDataInit>:
 8000544:	18c4      	adds	r4, r0, r3
 8000546:	428c      	cmp	r4, r1
 8000548:	d3f9      	bcc.n	800053e <CopyDataInit>
 800054a:	4a0a      	ldr	r2, [pc, #40]	@ (8000574 <LoopForever+0x12>)
 800054c:	4c0a      	ldr	r4, [pc, #40]	@ (8000578 <LoopForever+0x16>)
 800054e:	2300      	movs	r3, #0
 8000550:	e001      	b.n	8000556 <LoopFillZerobss>

08000552 <FillZerobss>:
 8000552:	6013      	str	r3, [r2, #0]
 8000554:	3204      	adds	r2, #4

08000556 <LoopFillZerobss>:
 8000556:	42a2      	cmp	r2, r4
 8000558:	d3fb      	bcc.n	8000552 <FillZerobss>
 800055a:	f000 f97d 	bl	8000858 <__libc_init_array>
 800055e:	f7ff ff31 	bl	80003c4 <main>

08000562 <LoopForever>:
 8000562:	e7fe      	b.n	8000562 <LoopForever>
 8000564:	20020000 	.word	0x20020000
 8000568:	20000000 	.word	0x20000000
 800056c:	2000005c 	.word	0x2000005c
 8000570:	08001464 	.word	0x08001464
 8000574:	2000005c 	.word	0x2000005c
 8000578:	200001c8 	.word	0x200001c8

0800057c <ADC_IRQHandler>:
 800057c:	e7fe      	b.n	800057c <ADC_IRQHandler>
	...

08000580 <std>:
 8000580:	2300      	movs	r3, #0
 8000582:	b510      	push	{r4, lr}
 8000584:	4604      	mov	r4, r0
 8000586:	e9c0 3300 	strd	r3, r3, [r0]
 800058a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800058e:	6083      	str	r3, [r0, #8]
 8000590:	8181      	strh	r1, [r0, #12]
 8000592:	6643      	str	r3, [r0, #100]	@ 0x64
 8000594:	81c2      	strh	r2, [r0, #14]
 8000596:	6183      	str	r3, [r0, #24]
 8000598:	4619      	mov	r1, r3
 800059a:	2208      	movs	r2, #8
 800059c:	305c      	adds	r0, #92	@ 0x5c
 800059e:	f000 f906 	bl	80007ae <memset>
 80005a2:	4b0d      	ldr	r3, [pc, #52]	@ (80005d8 <std+0x58>)
 80005a4:	6263      	str	r3, [r4, #36]	@ 0x24
 80005a6:	4b0d      	ldr	r3, [pc, #52]	@ (80005dc <std+0x5c>)
 80005a8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80005aa:	4b0d      	ldr	r3, [pc, #52]	@ (80005e0 <std+0x60>)
 80005ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80005ae:	4b0d      	ldr	r3, [pc, #52]	@ (80005e4 <std+0x64>)
 80005b0:	6323      	str	r3, [r4, #48]	@ 0x30
 80005b2:	4b0d      	ldr	r3, [pc, #52]	@ (80005e8 <std+0x68>)
 80005b4:	6224      	str	r4, [r4, #32]
 80005b6:	429c      	cmp	r4, r3
 80005b8:	d006      	beq.n	80005c8 <std+0x48>
 80005ba:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80005be:	4294      	cmp	r4, r2
 80005c0:	d002      	beq.n	80005c8 <std+0x48>
 80005c2:	33d0      	adds	r3, #208	@ 0xd0
 80005c4:	429c      	cmp	r4, r3
 80005c6:	d105      	bne.n	80005d4 <std+0x54>
 80005c8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	f000 b966 	b.w	80008a0 <__retarget_lock_init_recursive>
 80005d4:	bd10      	pop	{r4, pc}
 80005d6:	bf00      	nop
 80005d8:	08000729 	.word	0x08000729
 80005dc:	0800074b 	.word	0x0800074b
 80005e0:	08000783 	.word	0x08000783
 80005e4:	080007a7 	.word	0x080007a7
 80005e8:	2000007c 	.word	0x2000007c

080005ec <stdio_exit_handler>:
 80005ec:	4a02      	ldr	r2, [pc, #8]	@ (80005f8 <stdio_exit_handler+0xc>)
 80005ee:	4903      	ldr	r1, [pc, #12]	@ (80005fc <stdio_exit_handler+0x10>)
 80005f0:	4803      	ldr	r0, [pc, #12]	@ (8000600 <stdio_exit_handler+0x14>)
 80005f2:	f000 b869 	b.w	80006c8 <_fwalk_sglue>
 80005f6:	bf00      	nop
 80005f8:	20000000 	.word	0x20000000
 80005fc:	08001141 	.word	0x08001141
 8000600:	20000010 	.word	0x20000010

08000604 <cleanup_stdio>:
 8000604:	6841      	ldr	r1, [r0, #4]
 8000606:	4b0c      	ldr	r3, [pc, #48]	@ (8000638 <cleanup_stdio+0x34>)
 8000608:	4299      	cmp	r1, r3
 800060a:	b510      	push	{r4, lr}
 800060c:	4604      	mov	r4, r0
 800060e:	d001      	beq.n	8000614 <cleanup_stdio+0x10>
 8000610:	f000 fd96 	bl	8001140 <_fflush_r>
 8000614:	68a1      	ldr	r1, [r4, #8]
 8000616:	4b09      	ldr	r3, [pc, #36]	@ (800063c <cleanup_stdio+0x38>)
 8000618:	4299      	cmp	r1, r3
 800061a:	d002      	beq.n	8000622 <cleanup_stdio+0x1e>
 800061c:	4620      	mov	r0, r4
 800061e:	f000 fd8f 	bl	8001140 <_fflush_r>
 8000622:	68e1      	ldr	r1, [r4, #12]
 8000624:	4b06      	ldr	r3, [pc, #24]	@ (8000640 <cleanup_stdio+0x3c>)
 8000626:	4299      	cmp	r1, r3
 8000628:	d004      	beq.n	8000634 <cleanup_stdio+0x30>
 800062a:	4620      	mov	r0, r4
 800062c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000630:	f000 bd86 	b.w	8001140 <_fflush_r>
 8000634:	bd10      	pop	{r4, pc}
 8000636:	bf00      	nop
 8000638:	2000007c 	.word	0x2000007c
 800063c:	200000e4 	.word	0x200000e4
 8000640:	2000014c 	.word	0x2000014c

08000644 <global_stdio_init.part.0>:
 8000644:	b510      	push	{r4, lr}
 8000646:	4b0b      	ldr	r3, [pc, #44]	@ (8000674 <global_stdio_init.part.0+0x30>)
 8000648:	4c0b      	ldr	r4, [pc, #44]	@ (8000678 <global_stdio_init.part.0+0x34>)
 800064a:	4a0c      	ldr	r2, [pc, #48]	@ (800067c <global_stdio_init.part.0+0x38>)
 800064c:	601a      	str	r2, [r3, #0]
 800064e:	4620      	mov	r0, r4
 8000650:	2200      	movs	r2, #0
 8000652:	2104      	movs	r1, #4
 8000654:	f7ff ff94 	bl	8000580 <std>
 8000658:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800065c:	2201      	movs	r2, #1
 800065e:	2109      	movs	r1, #9
 8000660:	f7ff ff8e 	bl	8000580 <std>
 8000664:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000668:	2202      	movs	r2, #2
 800066a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800066e:	2112      	movs	r1, #18
 8000670:	f7ff bf86 	b.w	8000580 <std>
 8000674:	200001b4 	.word	0x200001b4
 8000678:	2000007c 	.word	0x2000007c
 800067c:	080005ed 	.word	0x080005ed

08000680 <__sfp_lock_acquire>:
 8000680:	4801      	ldr	r0, [pc, #4]	@ (8000688 <__sfp_lock_acquire+0x8>)
 8000682:	f000 b90e 	b.w	80008a2 <__retarget_lock_acquire_recursive>
 8000686:	bf00      	nop
 8000688:	200001bd 	.word	0x200001bd

0800068c <__sfp_lock_release>:
 800068c:	4801      	ldr	r0, [pc, #4]	@ (8000694 <__sfp_lock_release+0x8>)
 800068e:	f000 b909 	b.w	80008a4 <__retarget_lock_release_recursive>
 8000692:	bf00      	nop
 8000694:	200001bd 	.word	0x200001bd

08000698 <__sinit>:
 8000698:	b510      	push	{r4, lr}
 800069a:	4604      	mov	r4, r0
 800069c:	f7ff fff0 	bl	8000680 <__sfp_lock_acquire>
 80006a0:	6a23      	ldr	r3, [r4, #32]
 80006a2:	b11b      	cbz	r3, 80006ac <__sinit+0x14>
 80006a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a8:	f7ff bff0 	b.w	800068c <__sfp_lock_release>
 80006ac:	4b04      	ldr	r3, [pc, #16]	@ (80006c0 <__sinit+0x28>)
 80006ae:	6223      	str	r3, [r4, #32]
 80006b0:	4b04      	ldr	r3, [pc, #16]	@ (80006c4 <__sinit+0x2c>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	2b00      	cmp	r3, #0
 80006b6:	d1f5      	bne.n	80006a4 <__sinit+0xc>
 80006b8:	f7ff ffc4 	bl	8000644 <global_stdio_init.part.0>
 80006bc:	e7f2      	b.n	80006a4 <__sinit+0xc>
 80006be:	bf00      	nop
 80006c0:	08000605 	.word	0x08000605
 80006c4:	200001b4 	.word	0x200001b4

080006c8 <_fwalk_sglue>:
 80006c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006cc:	4607      	mov	r7, r0
 80006ce:	4688      	mov	r8, r1
 80006d0:	4614      	mov	r4, r2
 80006d2:	2600      	movs	r6, #0
 80006d4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006d8:	f1b9 0901 	subs.w	r9, r9, #1
 80006dc:	d505      	bpl.n	80006ea <_fwalk_sglue+0x22>
 80006de:	6824      	ldr	r4, [r4, #0]
 80006e0:	2c00      	cmp	r4, #0
 80006e2:	d1f7      	bne.n	80006d4 <_fwalk_sglue+0xc>
 80006e4:	4630      	mov	r0, r6
 80006e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006ea:	89ab      	ldrh	r3, [r5, #12]
 80006ec:	2b01      	cmp	r3, #1
 80006ee:	d907      	bls.n	8000700 <_fwalk_sglue+0x38>
 80006f0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006f4:	3301      	adds	r3, #1
 80006f6:	d003      	beq.n	8000700 <_fwalk_sglue+0x38>
 80006f8:	4629      	mov	r1, r5
 80006fa:	4638      	mov	r0, r7
 80006fc:	47c0      	blx	r8
 80006fe:	4306      	orrs	r6, r0
 8000700:	3568      	adds	r5, #104	@ 0x68
 8000702:	e7e9      	b.n	80006d8 <_fwalk_sglue+0x10>

08000704 <iprintf>:
 8000704:	b40f      	push	{r0, r1, r2, r3}
 8000706:	b507      	push	{r0, r1, r2, lr}
 8000708:	4906      	ldr	r1, [pc, #24]	@ (8000724 <iprintf+0x20>)
 800070a:	ab04      	add	r3, sp, #16
 800070c:	6808      	ldr	r0, [r1, #0]
 800070e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000712:	6881      	ldr	r1, [r0, #8]
 8000714:	9301      	str	r3, [sp, #4]
 8000716:	f000 f9e9 	bl	8000aec <_vfiprintf_r>
 800071a:	b003      	add	sp, #12
 800071c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000720:	b004      	add	sp, #16
 8000722:	4770      	bx	lr
 8000724:	2000000c 	.word	0x2000000c

08000728 <__sread>:
 8000728:	b510      	push	{r4, lr}
 800072a:	460c      	mov	r4, r1
 800072c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000730:	f000 f868 	bl	8000804 <_read_r>
 8000734:	2800      	cmp	r0, #0
 8000736:	bfab      	itete	ge
 8000738:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800073a:	89a3      	ldrhlt	r3, [r4, #12]
 800073c:	181b      	addge	r3, r3, r0
 800073e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000742:	bfac      	ite	ge
 8000744:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000746:	81a3      	strhlt	r3, [r4, #12]
 8000748:	bd10      	pop	{r4, pc}

0800074a <__swrite>:
 800074a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800074e:	461f      	mov	r7, r3
 8000750:	898b      	ldrh	r3, [r1, #12]
 8000752:	05db      	lsls	r3, r3, #23
 8000754:	4605      	mov	r5, r0
 8000756:	460c      	mov	r4, r1
 8000758:	4616      	mov	r6, r2
 800075a:	d505      	bpl.n	8000768 <__swrite+0x1e>
 800075c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000760:	2302      	movs	r3, #2
 8000762:	2200      	movs	r2, #0
 8000764:	f000 f83c 	bl	80007e0 <_lseek_r>
 8000768:	89a3      	ldrh	r3, [r4, #12]
 800076a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800076e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000772:	81a3      	strh	r3, [r4, #12]
 8000774:	4632      	mov	r2, r6
 8000776:	463b      	mov	r3, r7
 8000778:	4628      	mov	r0, r5
 800077a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800077e:	f000 b853 	b.w	8000828 <_write_r>

08000782 <__sseek>:
 8000782:	b510      	push	{r4, lr}
 8000784:	460c      	mov	r4, r1
 8000786:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800078a:	f000 f829 	bl	80007e0 <_lseek_r>
 800078e:	1c43      	adds	r3, r0, #1
 8000790:	89a3      	ldrh	r3, [r4, #12]
 8000792:	bf15      	itete	ne
 8000794:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000796:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800079a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800079e:	81a3      	strheq	r3, [r4, #12]
 80007a0:	bf18      	it	ne
 80007a2:	81a3      	strhne	r3, [r4, #12]
 80007a4:	bd10      	pop	{r4, pc}

080007a6 <__sclose>:
 80007a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007aa:	f000 b809 	b.w	80007c0 <_close_r>

080007ae <memset>:
 80007ae:	4402      	add	r2, r0
 80007b0:	4603      	mov	r3, r0
 80007b2:	4293      	cmp	r3, r2
 80007b4:	d100      	bne.n	80007b8 <memset+0xa>
 80007b6:	4770      	bx	lr
 80007b8:	f803 1b01 	strb.w	r1, [r3], #1
 80007bc:	e7f9      	b.n	80007b2 <memset+0x4>
	...

080007c0 <_close_r>:
 80007c0:	b538      	push	{r3, r4, r5, lr}
 80007c2:	4d06      	ldr	r5, [pc, #24]	@ (80007dc <_close_r+0x1c>)
 80007c4:	2300      	movs	r3, #0
 80007c6:	4604      	mov	r4, r0
 80007c8:	4608      	mov	r0, r1
 80007ca:	602b      	str	r3, [r5, #0]
 80007cc:	f7ff fe43 	bl	8000456 <_close>
 80007d0:	1c43      	adds	r3, r0, #1
 80007d2:	d102      	bne.n	80007da <_close_r+0x1a>
 80007d4:	682b      	ldr	r3, [r5, #0]
 80007d6:	b103      	cbz	r3, 80007da <_close_r+0x1a>
 80007d8:	6023      	str	r3, [r4, #0]
 80007da:	bd38      	pop	{r3, r4, r5, pc}
 80007dc:	200001b8 	.word	0x200001b8

080007e0 <_lseek_r>:
 80007e0:	b538      	push	{r3, r4, r5, lr}
 80007e2:	4d07      	ldr	r5, [pc, #28]	@ (8000800 <_lseek_r+0x20>)
 80007e4:	4604      	mov	r4, r0
 80007e6:	4608      	mov	r0, r1
 80007e8:	4611      	mov	r1, r2
 80007ea:	2200      	movs	r2, #0
 80007ec:	602a      	str	r2, [r5, #0]
 80007ee:	461a      	mov	r2, r3
 80007f0:	f7ff fe58 	bl	80004a4 <_lseek>
 80007f4:	1c43      	adds	r3, r0, #1
 80007f6:	d102      	bne.n	80007fe <_lseek_r+0x1e>
 80007f8:	682b      	ldr	r3, [r5, #0]
 80007fa:	b103      	cbz	r3, 80007fe <_lseek_r+0x1e>
 80007fc:	6023      	str	r3, [r4, #0]
 80007fe:	bd38      	pop	{r3, r4, r5, pc}
 8000800:	200001b8 	.word	0x200001b8

08000804 <_read_r>:
 8000804:	b538      	push	{r3, r4, r5, lr}
 8000806:	4d07      	ldr	r5, [pc, #28]	@ (8000824 <_read_r+0x20>)
 8000808:	4604      	mov	r4, r0
 800080a:	4608      	mov	r0, r1
 800080c:	4611      	mov	r1, r2
 800080e:	2200      	movs	r2, #0
 8000810:	602a      	str	r2, [r5, #0]
 8000812:	461a      	mov	r2, r3
 8000814:	f7ff fde6 	bl	80003e4 <_read>
 8000818:	1c43      	adds	r3, r0, #1
 800081a:	d102      	bne.n	8000822 <_read_r+0x1e>
 800081c:	682b      	ldr	r3, [r5, #0]
 800081e:	b103      	cbz	r3, 8000822 <_read_r+0x1e>
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	bd38      	pop	{r3, r4, r5, pc}
 8000824:	200001b8 	.word	0x200001b8

08000828 <_write_r>:
 8000828:	b538      	push	{r3, r4, r5, lr}
 800082a:	4d07      	ldr	r5, [pc, #28]	@ (8000848 <_write_r+0x20>)
 800082c:	4604      	mov	r4, r0
 800082e:	4608      	mov	r0, r1
 8000830:	4611      	mov	r1, r2
 8000832:	2200      	movs	r2, #0
 8000834:	602a      	str	r2, [r5, #0]
 8000836:	461a      	mov	r2, r3
 8000838:	f7ff fdf1 	bl	800041e <_write>
 800083c:	1c43      	adds	r3, r0, #1
 800083e:	d102      	bne.n	8000846 <_write_r+0x1e>
 8000840:	682b      	ldr	r3, [r5, #0]
 8000842:	b103      	cbz	r3, 8000846 <_write_r+0x1e>
 8000844:	6023      	str	r3, [r4, #0]
 8000846:	bd38      	pop	{r3, r4, r5, pc}
 8000848:	200001b8 	.word	0x200001b8

0800084c <__errno>:
 800084c:	4b01      	ldr	r3, [pc, #4]	@ (8000854 <__errno+0x8>)
 800084e:	6818      	ldr	r0, [r3, #0]
 8000850:	4770      	bx	lr
 8000852:	bf00      	nop
 8000854:	2000000c 	.word	0x2000000c

08000858 <__libc_init_array>:
 8000858:	b570      	push	{r4, r5, r6, lr}
 800085a:	4d0d      	ldr	r5, [pc, #52]	@ (8000890 <__libc_init_array+0x38>)
 800085c:	4c0d      	ldr	r4, [pc, #52]	@ (8000894 <__libc_init_array+0x3c>)
 800085e:	1b64      	subs	r4, r4, r5
 8000860:	10a4      	asrs	r4, r4, #2
 8000862:	2600      	movs	r6, #0
 8000864:	42a6      	cmp	r6, r4
 8000866:	d109      	bne.n	800087c <__libc_init_array+0x24>
 8000868:	4d0b      	ldr	r5, [pc, #44]	@ (8000898 <__libc_init_array+0x40>)
 800086a:	4c0c      	ldr	r4, [pc, #48]	@ (800089c <__libc_init_array+0x44>)
 800086c:	f000 fdb8 	bl	80013e0 <_init>
 8000870:	1b64      	subs	r4, r4, r5
 8000872:	10a4      	asrs	r4, r4, #2
 8000874:	2600      	movs	r6, #0
 8000876:	42a6      	cmp	r6, r4
 8000878:	d105      	bne.n	8000886 <__libc_init_array+0x2e>
 800087a:	bd70      	pop	{r4, r5, r6, pc}
 800087c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000880:	4798      	blx	r3
 8000882:	3601      	adds	r6, #1
 8000884:	e7ee      	b.n	8000864 <__libc_init_array+0xc>
 8000886:	f855 3b04 	ldr.w	r3, [r5], #4
 800088a:	4798      	blx	r3
 800088c:	3601      	adds	r6, #1
 800088e:	e7f2      	b.n	8000876 <__libc_init_array+0x1e>
 8000890:	0800145c 	.word	0x0800145c
 8000894:	0800145c 	.word	0x0800145c
 8000898:	0800145c 	.word	0x0800145c
 800089c:	08001460 	.word	0x08001460

080008a0 <__retarget_lock_init_recursive>:
 80008a0:	4770      	bx	lr

080008a2 <__retarget_lock_acquire_recursive>:
 80008a2:	4770      	bx	lr

080008a4 <__retarget_lock_release_recursive>:
 80008a4:	4770      	bx	lr
	...

080008a8 <_free_r>:
 80008a8:	b538      	push	{r3, r4, r5, lr}
 80008aa:	4605      	mov	r5, r0
 80008ac:	2900      	cmp	r1, #0
 80008ae:	d041      	beq.n	8000934 <_free_r+0x8c>
 80008b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008b4:	1f0c      	subs	r4, r1, #4
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	bfb8      	it	lt
 80008ba:	18e4      	addlt	r4, r4, r3
 80008bc:	f000 f8e0 	bl	8000a80 <__malloc_lock>
 80008c0:	4a1d      	ldr	r2, [pc, #116]	@ (8000938 <_free_r+0x90>)
 80008c2:	6813      	ldr	r3, [r2, #0]
 80008c4:	b933      	cbnz	r3, 80008d4 <_free_r+0x2c>
 80008c6:	6063      	str	r3, [r4, #4]
 80008c8:	6014      	str	r4, [r2, #0]
 80008ca:	4628      	mov	r0, r5
 80008cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008d0:	f000 b8dc 	b.w	8000a8c <__malloc_unlock>
 80008d4:	42a3      	cmp	r3, r4
 80008d6:	d908      	bls.n	80008ea <_free_r+0x42>
 80008d8:	6820      	ldr	r0, [r4, #0]
 80008da:	1821      	adds	r1, r4, r0
 80008dc:	428b      	cmp	r3, r1
 80008de:	bf01      	itttt	eq
 80008e0:	6819      	ldreq	r1, [r3, #0]
 80008e2:	685b      	ldreq	r3, [r3, #4]
 80008e4:	1809      	addeq	r1, r1, r0
 80008e6:	6021      	streq	r1, [r4, #0]
 80008e8:	e7ed      	b.n	80008c6 <_free_r+0x1e>
 80008ea:	461a      	mov	r2, r3
 80008ec:	685b      	ldr	r3, [r3, #4]
 80008ee:	b10b      	cbz	r3, 80008f4 <_free_r+0x4c>
 80008f0:	42a3      	cmp	r3, r4
 80008f2:	d9fa      	bls.n	80008ea <_free_r+0x42>
 80008f4:	6811      	ldr	r1, [r2, #0]
 80008f6:	1850      	adds	r0, r2, r1
 80008f8:	42a0      	cmp	r0, r4
 80008fa:	d10b      	bne.n	8000914 <_free_r+0x6c>
 80008fc:	6820      	ldr	r0, [r4, #0]
 80008fe:	4401      	add	r1, r0
 8000900:	1850      	adds	r0, r2, r1
 8000902:	4283      	cmp	r3, r0
 8000904:	6011      	str	r1, [r2, #0]
 8000906:	d1e0      	bne.n	80008ca <_free_r+0x22>
 8000908:	6818      	ldr	r0, [r3, #0]
 800090a:	685b      	ldr	r3, [r3, #4]
 800090c:	6053      	str	r3, [r2, #4]
 800090e:	4408      	add	r0, r1
 8000910:	6010      	str	r0, [r2, #0]
 8000912:	e7da      	b.n	80008ca <_free_r+0x22>
 8000914:	d902      	bls.n	800091c <_free_r+0x74>
 8000916:	230c      	movs	r3, #12
 8000918:	602b      	str	r3, [r5, #0]
 800091a:	e7d6      	b.n	80008ca <_free_r+0x22>
 800091c:	6820      	ldr	r0, [r4, #0]
 800091e:	1821      	adds	r1, r4, r0
 8000920:	428b      	cmp	r3, r1
 8000922:	bf04      	itt	eq
 8000924:	6819      	ldreq	r1, [r3, #0]
 8000926:	685b      	ldreq	r3, [r3, #4]
 8000928:	6063      	str	r3, [r4, #4]
 800092a:	bf04      	itt	eq
 800092c:	1809      	addeq	r1, r1, r0
 800092e:	6021      	streq	r1, [r4, #0]
 8000930:	6054      	str	r4, [r2, #4]
 8000932:	e7ca      	b.n	80008ca <_free_r+0x22>
 8000934:	bd38      	pop	{r3, r4, r5, pc}
 8000936:	bf00      	nop
 8000938:	200001c4 	.word	0x200001c4

0800093c <sbrk_aligned>:
 800093c:	b570      	push	{r4, r5, r6, lr}
 800093e:	4e0f      	ldr	r6, [pc, #60]	@ (800097c <sbrk_aligned+0x40>)
 8000940:	460c      	mov	r4, r1
 8000942:	6831      	ldr	r1, [r6, #0]
 8000944:	4605      	mov	r5, r0
 8000946:	b911      	cbnz	r1, 800094e <sbrk_aligned+0x12>
 8000948:	f000 fcb6 	bl	80012b8 <_sbrk_r>
 800094c:	6030      	str	r0, [r6, #0]
 800094e:	4621      	mov	r1, r4
 8000950:	4628      	mov	r0, r5
 8000952:	f000 fcb1 	bl	80012b8 <_sbrk_r>
 8000956:	1c43      	adds	r3, r0, #1
 8000958:	d103      	bne.n	8000962 <sbrk_aligned+0x26>
 800095a:	f04f 34ff 	mov.w	r4, #4294967295
 800095e:	4620      	mov	r0, r4
 8000960:	bd70      	pop	{r4, r5, r6, pc}
 8000962:	1cc4      	adds	r4, r0, #3
 8000964:	f024 0403 	bic.w	r4, r4, #3
 8000968:	42a0      	cmp	r0, r4
 800096a:	d0f8      	beq.n	800095e <sbrk_aligned+0x22>
 800096c:	1a21      	subs	r1, r4, r0
 800096e:	4628      	mov	r0, r5
 8000970:	f000 fca2 	bl	80012b8 <_sbrk_r>
 8000974:	3001      	adds	r0, #1
 8000976:	d1f2      	bne.n	800095e <sbrk_aligned+0x22>
 8000978:	e7ef      	b.n	800095a <sbrk_aligned+0x1e>
 800097a:	bf00      	nop
 800097c:	200001c0 	.word	0x200001c0

08000980 <_malloc_r>:
 8000980:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000984:	1ccd      	adds	r5, r1, #3
 8000986:	f025 0503 	bic.w	r5, r5, #3
 800098a:	3508      	adds	r5, #8
 800098c:	2d0c      	cmp	r5, #12
 800098e:	bf38      	it	cc
 8000990:	250c      	movcc	r5, #12
 8000992:	2d00      	cmp	r5, #0
 8000994:	4606      	mov	r6, r0
 8000996:	db01      	blt.n	800099c <_malloc_r+0x1c>
 8000998:	42a9      	cmp	r1, r5
 800099a:	d904      	bls.n	80009a6 <_malloc_r+0x26>
 800099c:	230c      	movs	r3, #12
 800099e:	6033      	str	r3, [r6, #0]
 80009a0:	2000      	movs	r0, #0
 80009a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009a6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a7c <_malloc_r+0xfc>
 80009aa:	f000 f869 	bl	8000a80 <__malloc_lock>
 80009ae:	f8d8 3000 	ldr.w	r3, [r8]
 80009b2:	461c      	mov	r4, r3
 80009b4:	bb44      	cbnz	r4, 8000a08 <_malloc_r+0x88>
 80009b6:	4629      	mov	r1, r5
 80009b8:	4630      	mov	r0, r6
 80009ba:	f7ff ffbf 	bl	800093c <sbrk_aligned>
 80009be:	1c43      	adds	r3, r0, #1
 80009c0:	4604      	mov	r4, r0
 80009c2:	d158      	bne.n	8000a76 <_malloc_r+0xf6>
 80009c4:	f8d8 4000 	ldr.w	r4, [r8]
 80009c8:	4627      	mov	r7, r4
 80009ca:	2f00      	cmp	r7, #0
 80009cc:	d143      	bne.n	8000a56 <_malloc_r+0xd6>
 80009ce:	2c00      	cmp	r4, #0
 80009d0:	d04b      	beq.n	8000a6a <_malloc_r+0xea>
 80009d2:	6823      	ldr	r3, [r4, #0]
 80009d4:	4639      	mov	r1, r7
 80009d6:	4630      	mov	r0, r6
 80009d8:	eb04 0903 	add.w	r9, r4, r3
 80009dc:	f000 fc6c 	bl	80012b8 <_sbrk_r>
 80009e0:	4581      	cmp	r9, r0
 80009e2:	d142      	bne.n	8000a6a <_malloc_r+0xea>
 80009e4:	6821      	ldr	r1, [r4, #0]
 80009e6:	1a6d      	subs	r5, r5, r1
 80009e8:	4629      	mov	r1, r5
 80009ea:	4630      	mov	r0, r6
 80009ec:	f7ff ffa6 	bl	800093c <sbrk_aligned>
 80009f0:	3001      	adds	r0, #1
 80009f2:	d03a      	beq.n	8000a6a <_malloc_r+0xea>
 80009f4:	6823      	ldr	r3, [r4, #0]
 80009f6:	442b      	add	r3, r5
 80009f8:	6023      	str	r3, [r4, #0]
 80009fa:	f8d8 3000 	ldr.w	r3, [r8]
 80009fe:	685a      	ldr	r2, [r3, #4]
 8000a00:	bb62      	cbnz	r2, 8000a5c <_malloc_r+0xdc>
 8000a02:	f8c8 7000 	str.w	r7, [r8]
 8000a06:	e00f      	b.n	8000a28 <_malloc_r+0xa8>
 8000a08:	6822      	ldr	r2, [r4, #0]
 8000a0a:	1b52      	subs	r2, r2, r5
 8000a0c:	d420      	bmi.n	8000a50 <_malloc_r+0xd0>
 8000a0e:	2a0b      	cmp	r2, #11
 8000a10:	d917      	bls.n	8000a42 <_malloc_r+0xc2>
 8000a12:	1961      	adds	r1, r4, r5
 8000a14:	42a3      	cmp	r3, r4
 8000a16:	6025      	str	r5, [r4, #0]
 8000a18:	bf18      	it	ne
 8000a1a:	6059      	strne	r1, [r3, #4]
 8000a1c:	6863      	ldr	r3, [r4, #4]
 8000a1e:	bf08      	it	eq
 8000a20:	f8c8 1000 	streq.w	r1, [r8]
 8000a24:	5162      	str	r2, [r4, r5]
 8000a26:	604b      	str	r3, [r1, #4]
 8000a28:	4630      	mov	r0, r6
 8000a2a:	f000 f82f 	bl	8000a8c <__malloc_unlock>
 8000a2e:	f104 000b 	add.w	r0, r4, #11
 8000a32:	1d23      	adds	r3, r4, #4
 8000a34:	f020 0007 	bic.w	r0, r0, #7
 8000a38:	1ac2      	subs	r2, r0, r3
 8000a3a:	bf1c      	itt	ne
 8000a3c:	1a1b      	subne	r3, r3, r0
 8000a3e:	50a3      	strne	r3, [r4, r2]
 8000a40:	e7af      	b.n	80009a2 <_malloc_r+0x22>
 8000a42:	6862      	ldr	r2, [r4, #4]
 8000a44:	42a3      	cmp	r3, r4
 8000a46:	bf0c      	ite	eq
 8000a48:	f8c8 2000 	streq.w	r2, [r8]
 8000a4c:	605a      	strne	r2, [r3, #4]
 8000a4e:	e7eb      	b.n	8000a28 <_malloc_r+0xa8>
 8000a50:	4623      	mov	r3, r4
 8000a52:	6864      	ldr	r4, [r4, #4]
 8000a54:	e7ae      	b.n	80009b4 <_malloc_r+0x34>
 8000a56:	463c      	mov	r4, r7
 8000a58:	687f      	ldr	r7, [r7, #4]
 8000a5a:	e7b6      	b.n	80009ca <_malloc_r+0x4a>
 8000a5c:	461a      	mov	r2, r3
 8000a5e:	685b      	ldr	r3, [r3, #4]
 8000a60:	42a3      	cmp	r3, r4
 8000a62:	d1fb      	bne.n	8000a5c <_malloc_r+0xdc>
 8000a64:	2300      	movs	r3, #0
 8000a66:	6053      	str	r3, [r2, #4]
 8000a68:	e7de      	b.n	8000a28 <_malloc_r+0xa8>
 8000a6a:	230c      	movs	r3, #12
 8000a6c:	6033      	str	r3, [r6, #0]
 8000a6e:	4630      	mov	r0, r6
 8000a70:	f000 f80c 	bl	8000a8c <__malloc_unlock>
 8000a74:	e794      	b.n	80009a0 <_malloc_r+0x20>
 8000a76:	6005      	str	r5, [r0, #0]
 8000a78:	e7d6      	b.n	8000a28 <_malloc_r+0xa8>
 8000a7a:	bf00      	nop
 8000a7c:	200001c4 	.word	0x200001c4

08000a80 <__malloc_lock>:
 8000a80:	4801      	ldr	r0, [pc, #4]	@ (8000a88 <__malloc_lock+0x8>)
 8000a82:	f7ff bf0e 	b.w	80008a2 <__retarget_lock_acquire_recursive>
 8000a86:	bf00      	nop
 8000a88:	200001bc 	.word	0x200001bc

08000a8c <__malloc_unlock>:
 8000a8c:	4801      	ldr	r0, [pc, #4]	@ (8000a94 <__malloc_unlock+0x8>)
 8000a8e:	f7ff bf09 	b.w	80008a4 <__retarget_lock_release_recursive>
 8000a92:	bf00      	nop
 8000a94:	200001bc 	.word	0x200001bc

08000a98 <__sfputc_r>:
 8000a98:	6893      	ldr	r3, [r2, #8]
 8000a9a:	3b01      	subs	r3, #1
 8000a9c:	2b00      	cmp	r3, #0
 8000a9e:	b410      	push	{r4}
 8000aa0:	6093      	str	r3, [r2, #8]
 8000aa2:	da08      	bge.n	8000ab6 <__sfputc_r+0x1e>
 8000aa4:	6994      	ldr	r4, [r2, #24]
 8000aa6:	42a3      	cmp	r3, r4
 8000aa8:	db01      	blt.n	8000aae <__sfputc_r+0x16>
 8000aaa:	290a      	cmp	r1, #10
 8000aac:	d103      	bne.n	8000ab6 <__sfputc_r+0x1e>
 8000aae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ab2:	f000 bb6d 	b.w	8001190 <__swbuf_r>
 8000ab6:	6813      	ldr	r3, [r2, #0]
 8000ab8:	1c58      	adds	r0, r3, #1
 8000aba:	6010      	str	r0, [r2, #0]
 8000abc:	7019      	strb	r1, [r3, #0]
 8000abe:	4608      	mov	r0, r1
 8000ac0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ac4:	4770      	bx	lr

08000ac6 <__sfputs_r>:
 8000ac6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ac8:	4606      	mov	r6, r0
 8000aca:	460f      	mov	r7, r1
 8000acc:	4614      	mov	r4, r2
 8000ace:	18d5      	adds	r5, r2, r3
 8000ad0:	42ac      	cmp	r4, r5
 8000ad2:	d101      	bne.n	8000ad8 <__sfputs_r+0x12>
 8000ad4:	2000      	movs	r0, #0
 8000ad6:	e007      	b.n	8000ae8 <__sfputs_r+0x22>
 8000ad8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000adc:	463a      	mov	r2, r7
 8000ade:	4630      	mov	r0, r6
 8000ae0:	f7ff ffda 	bl	8000a98 <__sfputc_r>
 8000ae4:	1c43      	adds	r3, r0, #1
 8000ae6:	d1f3      	bne.n	8000ad0 <__sfputs_r+0xa>
 8000ae8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000aec <_vfiprintf_r>:
 8000aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000af0:	460d      	mov	r5, r1
 8000af2:	b09d      	sub	sp, #116	@ 0x74
 8000af4:	4614      	mov	r4, r2
 8000af6:	4698      	mov	r8, r3
 8000af8:	4606      	mov	r6, r0
 8000afa:	b118      	cbz	r0, 8000b04 <_vfiprintf_r+0x18>
 8000afc:	6a03      	ldr	r3, [r0, #32]
 8000afe:	b90b      	cbnz	r3, 8000b04 <_vfiprintf_r+0x18>
 8000b00:	f7ff fdca 	bl	8000698 <__sinit>
 8000b04:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b06:	07d9      	lsls	r1, r3, #31
 8000b08:	d405      	bmi.n	8000b16 <_vfiprintf_r+0x2a>
 8000b0a:	89ab      	ldrh	r3, [r5, #12]
 8000b0c:	059a      	lsls	r2, r3, #22
 8000b0e:	d402      	bmi.n	8000b16 <_vfiprintf_r+0x2a>
 8000b10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b12:	f7ff fec6 	bl	80008a2 <__retarget_lock_acquire_recursive>
 8000b16:	89ab      	ldrh	r3, [r5, #12]
 8000b18:	071b      	lsls	r3, r3, #28
 8000b1a:	d501      	bpl.n	8000b20 <_vfiprintf_r+0x34>
 8000b1c:	692b      	ldr	r3, [r5, #16]
 8000b1e:	b99b      	cbnz	r3, 8000b48 <_vfiprintf_r+0x5c>
 8000b20:	4629      	mov	r1, r5
 8000b22:	4630      	mov	r0, r6
 8000b24:	f000 fb72 	bl	800120c <__swsetup_r>
 8000b28:	b170      	cbz	r0, 8000b48 <_vfiprintf_r+0x5c>
 8000b2a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b2c:	07dc      	lsls	r4, r3, #31
 8000b2e:	d504      	bpl.n	8000b3a <_vfiprintf_r+0x4e>
 8000b30:	f04f 30ff 	mov.w	r0, #4294967295
 8000b34:	b01d      	add	sp, #116	@ 0x74
 8000b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b3a:	89ab      	ldrh	r3, [r5, #12]
 8000b3c:	0598      	lsls	r0, r3, #22
 8000b3e:	d4f7      	bmi.n	8000b30 <_vfiprintf_r+0x44>
 8000b40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b42:	f7ff feaf 	bl	80008a4 <__retarget_lock_release_recursive>
 8000b46:	e7f3      	b.n	8000b30 <_vfiprintf_r+0x44>
 8000b48:	2300      	movs	r3, #0
 8000b4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b4c:	2320      	movs	r3, #32
 8000b4e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000b52:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b56:	2330      	movs	r3, #48	@ 0x30
 8000b58:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000d08 <_vfiprintf_r+0x21c>
 8000b5c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000b60:	f04f 0901 	mov.w	r9, #1
 8000b64:	4623      	mov	r3, r4
 8000b66:	469a      	mov	sl, r3
 8000b68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b6c:	b10a      	cbz	r2, 8000b72 <_vfiprintf_r+0x86>
 8000b6e:	2a25      	cmp	r2, #37	@ 0x25
 8000b70:	d1f9      	bne.n	8000b66 <_vfiprintf_r+0x7a>
 8000b72:	ebba 0b04 	subs.w	fp, sl, r4
 8000b76:	d00b      	beq.n	8000b90 <_vfiprintf_r+0xa4>
 8000b78:	465b      	mov	r3, fp
 8000b7a:	4622      	mov	r2, r4
 8000b7c:	4629      	mov	r1, r5
 8000b7e:	4630      	mov	r0, r6
 8000b80:	f7ff ffa1 	bl	8000ac6 <__sfputs_r>
 8000b84:	3001      	adds	r0, #1
 8000b86:	f000 80a7 	beq.w	8000cd8 <_vfiprintf_r+0x1ec>
 8000b8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000b8c:	445a      	add	r2, fp
 8000b8e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000b90:	f89a 3000 	ldrb.w	r3, [sl]
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	f000 809f 	beq.w	8000cd8 <_vfiprintf_r+0x1ec>
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	f04f 32ff 	mov.w	r2, #4294967295
 8000ba0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ba4:	f10a 0a01 	add.w	sl, sl, #1
 8000ba8:	9304      	str	r3, [sp, #16]
 8000baa:	9307      	str	r3, [sp, #28]
 8000bac:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000bb0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000bb2:	4654      	mov	r4, sl
 8000bb4:	2205      	movs	r2, #5
 8000bb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bba:	4853      	ldr	r0, [pc, #332]	@ (8000d08 <_vfiprintf_r+0x21c>)
 8000bbc:	f7ff fb28 	bl	8000210 <memchr>
 8000bc0:	9a04      	ldr	r2, [sp, #16]
 8000bc2:	b9d8      	cbnz	r0, 8000bfc <_vfiprintf_r+0x110>
 8000bc4:	06d1      	lsls	r1, r2, #27
 8000bc6:	bf44      	itt	mi
 8000bc8:	2320      	movmi	r3, #32
 8000bca:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000bce:	0713      	lsls	r3, r2, #28
 8000bd0:	bf44      	itt	mi
 8000bd2:	232b      	movmi	r3, #43	@ 0x2b
 8000bd4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000bd8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bdc:	2b2a      	cmp	r3, #42	@ 0x2a
 8000bde:	d015      	beq.n	8000c0c <_vfiprintf_r+0x120>
 8000be0:	9a07      	ldr	r2, [sp, #28]
 8000be2:	4654      	mov	r4, sl
 8000be4:	2000      	movs	r0, #0
 8000be6:	f04f 0c0a 	mov.w	ip, #10
 8000bea:	4621      	mov	r1, r4
 8000bec:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bf0:	3b30      	subs	r3, #48	@ 0x30
 8000bf2:	2b09      	cmp	r3, #9
 8000bf4:	d94b      	bls.n	8000c8e <_vfiprintf_r+0x1a2>
 8000bf6:	b1b0      	cbz	r0, 8000c26 <_vfiprintf_r+0x13a>
 8000bf8:	9207      	str	r2, [sp, #28]
 8000bfa:	e014      	b.n	8000c26 <_vfiprintf_r+0x13a>
 8000bfc:	eba0 0308 	sub.w	r3, r0, r8
 8000c00:	fa09 f303 	lsl.w	r3, r9, r3
 8000c04:	4313      	orrs	r3, r2
 8000c06:	9304      	str	r3, [sp, #16]
 8000c08:	46a2      	mov	sl, r4
 8000c0a:	e7d2      	b.n	8000bb2 <_vfiprintf_r+0xc6>
 8000c0c:	9b03      	ldr	r3, [sp, #12]
 8000c0e:	1d19      	adds	r1, r3, #4
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	9103      	str	r1, [sp, #12]
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	bfbb      	ittet	lt
 8000c18:	425b      	neglt	r3, r3
 8000c1a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c1e:	9307      	strge	r3, [sp, #28]
 8000c20:	9307      	strlt	r3, [sp, #28]
 8000c22:	bfb8      	it	lt
 8000c24:	9204      	strlt	r2, [sp, #16]
 8000c26:	7823      	ldrb	r3, [r4, #0]
 8000c28:	2b2e      	cmp	r3, #46	@ 0x2e
 8000c2a:	d10a      	bne.n	8000c42 <_vfiprintf_r+0x156>
 8000c2c:	7863      	ldrb	r3, [r4, #1]
 8000c2e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000c30:	d132      	bne.n	8000c98 <_vfiprintf_r+0x1ac>
 8000c32:	9b03      	ldr	r3, [sp, #12]
 8000c34:	1d1a      	adds	r2, r3, #4
 8000c36:	681b      	ldr	r3, [r3, #0]
 8000c38:	9203      	str	r2, [sp, #12]
 8000c3a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000c3e:	3402      	adds	r4, #2
 8000c40:	9305      	str	r3, [sp, #20]
 8000c42:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000d18 <_vfiprintf_r+0x22c>
 8000c46:	7821      	ldrb	r1, [r4, #0]
 8000c48:	2203      	movs	r2, #3
 8000c4a:	4650      	mov	r0, sl
 8000c4c:	f7ff fae0 	bl	8000210 <memchr>
 8000c50:	b138      	cbz	r0, 8000c62 <_vfiprintf_r+0x176>
 8000c52:	9b04      	ldr	r3, [sp, #16]
 8000c54:	eba0 000a 	sub.w	r0, r0, sl
 8000c58:	2240      	movs	r2, #64	@ 0x40
 8000c5a:	4082      	lsls	r2, r0
 8000c5c:	4313      	orrs	r3, r2
 8000c5e:	3401      	adds	r4, #1
 8000c60:	9304      	str	r3, [sp, #16]
 8000c62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c66:	4829      	ldr	r0, [pc, #164]	@ (8000d0c <_vfiprintf_r+0x220>)
 8000c68:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000c6c:	2206      	movs	r2, #6
 8000c6e:	f7ff facf 	bl	8000210 <memchr>
 8000c72:	2800      	cmp	r0, #0
 8000c74:	d03f      	beq.n	8000cf6 <_vfiprintf_r+0x20a>
 8000c76:	4b26      	ldr	r3, [pc, #152]	@ (8000d10 <_vfiprintf_r+0x224>)
 8000c78:	bb1b      	cbnz	r3, 8000cc2 <_vfiprintf_r+0x1d6>
 8000c7a:	9b03      	ldr	r3, [sp, #12]
 8000c7c:	3307      	adds	r3, #7
 8000c7e:	f023 0307 	bic.w	r3, r3, #7
 8000c82:	3308      	adds	r3, #8
 8000c84:	9303      	str	r3, [sp, #12]
 8000c86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000c88:	443b      	add	r3, r7
 8000c8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c8c:	e76a      	b.n	8000b64 <_vfiprintf_r+0x78>
 8000c8e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c92:	460c      	mov	r4, r1
 8000c94:	2001      	movs	r0, #1
 8000c96:	e7a8      	b.n	8000bea <_vfiprintf_r+0xfe>
 8000c98:	2300      	movs	r3, #0
 8000c9a:	3401      	adds	r4, #1
 8000c9c:	9305      	str	r3, [sp, #20]
 8000c9e:	4619      	mov	r1, r3
 8000ca0:	f04f 0c0a 	mov.w	ip, #10
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000caa:	3a30      	subs	r2, #48	@ 0x30
 8000cac:	2a09      	cmp	r2, #9
 8000cae:	d903      	bls.n	8000cb8 <_vfiprintf_r+0x1cc>
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d0c6      	beq.n	8000c42 <_vfiprintf_r+0x156>
 8000cb4:	9105      	str	r1, [sp, #20]
 8000cb6:	e7c4      	b.n	8000c42 <_vfiprintf_r+0x156>
 8000cb8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cbc:	4604      	mov	r4, r0
 8000cbe:	2301      	movs	r3, #1
 8000cc0:	e7f0      	b.n	8000ca4 <_vfiprintf_r+0x1b8>
 8000cc2:	ab03      	add	r3, sp, #12
 8000cc4:	9300      	str	r3, [sp, #0]
 8000cc6:	462a      	mov	r2, r5
 8000cc8:	4b12      	ldr	r3, [pc, #72]	@ (8000d14 <_vfiprintf_r+0x228>)
 8000cca:	a904      	add	r1, sp, #16
 8000ccc:	4630      	mov	r0, r6
 8000cce:	f3af 8000 	nop.w
 8000cd2:	4607      	mov	r7, r0
 8000cd4:	1c78      	adds	r0, r7, #1
 8000cd6:	d1d6      	bne.n	8000c86 <_vfiprintf_r+0x19a>
 8000cd8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cda:	07d9      	lsls	r1, r3, #31
 8000cdc:	d405      	bmi.n	8000cea <_vfiprintf_r+0x1fe>
 8000cde:	89ab      	ldrh	r3, [r5, #12]
 8000ce0:	059a      	lsls	r2, r3, #22
 8000ce2:	d402      	bmi.n	8000cea <_vfiprintf_r+0x1fe>
 8000ce4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ce6:	f7ff fddd 	bl	80008a4 <__retarget_lock_release_recursive>
 8000cea:	89ab      	ldrh	r3, [r5, #12]
 8000cec:	065b      	lsls	r3, r3, #25
 8000cee:	f53f af1f 	bmi.w	8000b30 <_vfiprintf_r+0x44>
 8000cf2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000cf4:	e71e      	b.n	8000b34 <_vfiprintf_r+0x48>
 8000cf6:	ab03      	add	r3, sp, #12
 8000cf8:	9300      	str	r3, [sp, #0]
 8000cfa:	462a      	mov	r2, r5
 8000cfc:	4b05      	ldr	r3, [pc, #20]	@ (8000d14 <_vfiprintf_r+0x228>)
 8000cfe:	a904      	add	r1, sp, #16
 8000d00:	4630      	mov	r0, r6
 8000d02:	f000 f879 	bl	8000df8 <_printf_i>
 8000d06:	e7e4      	b.n	8000cd2 <_vfiprintf_r+0x1e6>
 8000d08:	0800141e 	.word	0x0800141e
 8000d0c:	08001428 	.word	0x08001428
 8000d10:	00000000 	.word	0x00000000
 8000d14:	08000ac7 	.word	0x08000ac7
 8000d18:	08001424 	.word	0x08001424

08000d1c <_printf_common>:
 8000d1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d20:	4616      	mov	r6, r2
 8000d22:	4698      	mov	r8, r3
 8000d24:	688a      	ldr	r2, [r1, #8]
 8000d26:	690b      	ldr	r3, [r1, #16]
 8000d28:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000d2c:	4293      	cmp	r3, r2
 8000d2e:	bfb8      	it	lt
 8000d30:	4613      	movlt	r3, r2
 8000d32:	6033      	str	r3, [r6, #0]
 8000d34:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000d38:	4607      	mov	r7, r0
 8000d3a:	460c      	mov	r4, r1
 8000d3c:	b10a      	cbz	r2, 8000d42 <_printf_common+0x26>
 8000d3e:	3301      	adds	r3, #1
 8000d40:	6033      	str	r3, [r6, #0]
 8000d42:	6823      	ldr	r3, [r4, #0]
 8000d44:	0699      	lsls	r1, r3, #26
 8000d46:	bf42      	ittt	mi
 8000d48:	6833      	ldrmi	r3, [r6, #0]
 8000d4a:	3302      	addmi	r3, #2
 8000d4c:	6033      	strmi	r3, [r6, #0]
 8000d4e:	6825      	ldr	r5, [r4, #0]
 8000d50:	f015 0506 	ands.w	r5, r5, #6
 8000d54:	d106      	bne.n	8000d64 <_printf_common+0x48>
 8000d56:	f104 0a19 	add.w	sl, r4, #25
 8000d5a:	68e3      	ldr	r3, [r4, #12]
 8000d5c:	6832      	ldr	r2, [r6, #0]
 8000d5e:	1a9b      	subs	r3, r3, r2
 8000d60:	42ab      	cmp	r3, r5
 8000d62:	dc26      	bgt.n	8000db2 <_printf_common+0x96>
 8000d64:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000d68:	6822      	ldr	r2, [r4, #0]
 8000d6a:	3b00      	subs	r3, #0
 8000d6c:	bf18      	it	ne
 8000d6e:	2301      	movne	r3, #1
 8000d70:	0692      	lsls	r2, r2, #26
 8000d72:	d42b      	bmi.n	8000dcc <_printf_common+0xb0>
 8000d74:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000d78:	4641      	mov	r1, r8
 8000d7a:	4638      	mov	r0, r7
 8000d7c:	47c8      	blx	r9
 8000d7e:	3001      	adds	r0, #1
 8000d80:	d01e      	beq.n	8000dc0 <_printf_common+0xa4>
 8000d82:	6823      	ldr	r3, [r4, #0]
 8000d84:	6922      	ldr	r2, [r4, #16]
 8000d86:	f003 0306 	and.w	r3, r3, #6
 8000d8a:	2b04      	cmp	r3, #4
 8000d8c:	bf02      	ittt	eq
 8000d8e:	68e5      	ldreq	r5, [r4, #12]
 8000d90:	6833      	ldreq	r3, [r6, #0]
 8000d92:	1aed      	subeq	r5, r5, r3
 8000d94:	68a3      	ldr	r3, [r4, #8]
 8000d96:	bf0c      	ite	eq
 8000d98:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d9c:	2500      	movne	r5, #0
 8000d9e:	4293      	cmp	r3, r2
 8000da0:	bfc4      	itt	gt
 8000da2:	1a9b      	subgt	r3, r3, r2
 8000da4:	18ed      	addgt	r5, r5, r3
 8000da6:	2600      	movs	r6, #0
 8000da8:	341a      	adds	r4, #26
 8000daa:	42b5      	cmp	r5, r6
 8000dac:	d11a      	bne.n	8000de4 <_printf_common+0xc8>
 8000dae:	2000      	movs	r0, #0
 8000db0:	e008      	b.n	8000dc4 <_printf_common+0xa8>
 8000db2:	2301      	movs	r3, #1
 8000db4:	4652      	mov	r2, sl
 8000db6:	4641      	mov	r1, r8
 8000db8:	4638      	mov	r0, r7
 8000dba:	47c8      	blx	r9
 8000dbc:	3001      	adds	r0, #1
 8000dbe:	d103      	bne.n	8000dc8 <_printf_common+0xac>
 8000dc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dc8:	3501      	adds	r5, #1
 8000dca:	e7c6      	b.n	8000d5a <_printf_common+0x3e>
 8000dcc:	18e1      	adds	r1, r4, r3
 8000dce:	1c5a      	adds	r2, r3, #1
 8000dd0:	2030      	movs	r0, #48	@ 0x30
 8000dd2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000dd6:	4422      	add	r2, r4
 8000dd8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000ddc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000de0:	3302      	adds	r3, #2
 8000de2:	e7c7      	b.n	8000d74 <_printf_common+0x58>
 8000de4:	2301      	movs	r3, #1
 8000de6:	4622      	mov	r2, r4
 8000de8:	4641      	mov	r1, r8
 8000dea:	4638      	mov	r0, r7
 8000dec:	47c8      	blx	r9
 8000dee:	3001      	adds	r0, #1
 8000df0:	d0e6      	beq.n	8000dc0 <_printf_common+0xa4>
 8000df2:	3601      	adds	r6, #1
 8000df4:	e7d9      	b.n	8000daa <_printf_common+0x8e>
	...

08000df8 <_printf_i>:
 8000df8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000dfc:	7e0f      	ldrb	r7, [r1, #24]
 8000dfe:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000e00:	2f78      	cmp	r7, #120	@ 0x78
 8000e02:	4691      	mov	r9, r2
 8000e04:	4680      	mov	r8, r0
 8000e06:	460c      	mov	r4, r1
 8000e08:	469a      	mov	sl, r3
 8000e0a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000e0e:	d807      	bhi.n	8000e20 <_printf_i+0x28>
 8000e10:	2f62      	cmp	r7, #98	@ 0x62
 8000e12:	d80a      	bhi.n	8000e2a <_printf_i+0x32>
 8000e14:	2f00      	cmp	r7, #0
 8000e16:	f000 80d2 	beq.w	8000fbe <_printf_i+0x1c6>
 8000e1a:	2f58      	cmp	r7, #88	@ 0x58
 8000e1c:	f000 80b9 	beq.w	8000f92 <_printf_i+0x19a>
 8000e20:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e24:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000e28:	e03a      	b.n	8000ea0 <_printf_i+0xa8>
 8000e2a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000e2e:	2b15      	cmp	r3, #21
 8000e30:	d8f6      	bhi.n	8000e20 <_printf_i+0x28>
 8000e32:	a101      	add	r1, pc, #4	@ (adr r1, 8000e38 <_printf_i+0x40>)
 8000e34:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e38:	08000e91 	.word	0x08000e91
 8000e3c:	08000ea5 	.word	0x08000ea5
 8000e40:	08000e21 	.word	0x08000e21
 8000e44:	08000e21 	.word	0x08000e21
 8000e48:	08000e21 	.word	0x08000e21
 8000e4c:	08000e21 	.word	0x08000e21
 8000e50:	08000ea5 	.word	0x08000ea5
 8000e54:	08000e21 	.word	0x08000e21
 8000e58:	08000e21 	.word	0x08000e21
 8000e5c:	08000e21 	.word	0x08000e21
 8000e60:	08000e21 	.word	0x08000e21
 8000e64:	08000fa5 	.word	0x08000fa5
 8000e68:	08000ecf 	.word	0x08000ecf
 8000e6c:	08000f5f 	.word	0x08000f5f
 8000e70:	08000e21 	.word	0x08000e21
 8000e74:	08000e21 	.word	0x08000e21
 8000e78:	08000fc7 	.word	0x08000fc7
 8000e7c:	08000e21 	.word	0x08000e21
 8000e80:	08000ecf 	.word	0x08000ecf
 8000e84:	08000e21 	.word	0x08000e21
 8000e88:	08000e21 	.word	0x08000e21
 8000e8c:	08000f67 	.word	0x08000f67
 8000e90:	6833      	ldr	r3, [r6, #0]
 8000e92:	1d1a      	adds	r2, r3, #4
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	6032      	str	r2, [r6, #0]
 8000e98:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e9c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000ea0:	2301      	movs	r3, #1
 8000ea2:	e09d      	b.n	8000fe0 <_printf_i+0x1e8>
 8000ea4:	6833      	ldr	r3, [r6, #0]
 8000ea6:	6820      	ldr	r0, [r4, #0]
 8000ea8:	1d19      	adds	r1, r3, #4
 8000eaa:	6031      	str	r1, [r6, #0]
 8000eac:	0606      	lsls	r6, r0, #24
 8000eae:	d501      	bpl.n	8000eb4 <_printf_i+0xbc>
 8000eb0:	681d      	ldr	r5, [r3, #0]
 8000eb2:	e003      	b.n	8000ebc <_printf_i+0xc4>
 8000eb4:	0645      	lsls	r5, r0, #25
 8000eb6:	d5fb      	bpl.n	8000eb0 <_printf_i+0xb8>
 8000eb8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ebc:	2d00      	cmp	r5, #0
 8000ebe:	da03      	bge.n	8000ec8 <_printf_i+0xd0>
 8000ec0:	232d      	movs	r3, #45	@ 0x2d
 8000ec2:	426d      	negs	r5, r5
 8000ec4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000ec8:	4859      	ldr	r0, [pc, #356]	@ (8001030 <_printf_i+0x238>)
 8000eca:	230a      	movs	r3, #10
 8000ecc:	e011      	b.n	8000ef2 <_printf_i+0xfa>
 8000ece:	6821      	ldr	r1, [r4, #0]
 8000ed0:	6833      	ldr	r3, [r6, #0]
 8000ed2:	0608      	lsls	r0, r1, #24
 8000ed4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000ed8:	d402      	bmi.n	8000ee0 <_printf_i+0xe8>
 8000eda:	0649      	lsls	r1, r1, #25
 8000edc:	bf48      	it	mi
 8000ede:	b2ad      	uxthmi	r5, r5
 8000ee0:	2f6f      	cmp	r7, #111	@ 0x6f
 8000ee2:	4853      	ldr	r0, [pc, #332]	@ (8001030 <_printf_i+0x238>)
 8000ee4:	6033      	str	r3, [r6, #0]
 8000ee6:	bf14      	ite	ne
 8000ee8:	230a      	movne	r3, #10
 8000eea:	2308      	moveq	r3, #8
 8000eec:	2100      	movs	r1, #0
 8000eee:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000ef2:	6866      	ldr	r6, [r4, #4]
 8000ef4:	60a6      	str	r6, [r4, #8]
 8000ef6:	2e00      	cmp	r6, #0
 8000ef8:	bfa2      	ittt	ge
 8000efa:	6821      	ldrge	r1, [r4, #0]
 8000efc:	f021 0104 	bicge.w	r1, r1, #4
 8000f00:	6021      	strge	r1, [r4, #0]
 8000f02:	b90d      	cbnz	r5, 8000f08 <_printf_i+0x110>
 8000f04:	2e00      	cmp	r6, #0
 8000f06:	d04b      	beq.n	8000fa0 <_printf_i+0x1a8>
 8000f08:	4616      	mov	r6, r2
 8000f0a:	fbb5 f1f3 	udiv	r1, r5, r3
 8000f0e:	fb03 5711 	mls	r7, r3, r1, r5
 8000f12:	5dc7      	ldrb	r7, [r0, r7]
 8000f14:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000f18:	462f      	mov	r7, r5
 8000f1a:	42bb      	cmp	r3, r7
 8000f1c:	460d      	mov	r5, r1
 8000f1e:	d9f4      	bls.n	8000f0a <_printf_i+0x112>
 8000f20:	2b08      	cmp	r3, #8
 8000f22:	d10b      	bne.n	8000f3c <_printf_i+0x144>
 8000f24:	6823      	ldr	r3, [r4, #0]
 8000f26:	07df      	lsls	r7, r3, #31
 8000f28:	d508      	bpl.n	8000f3c <_printf_i+0x144>
 8000f2a:	6923      	ldr	r3, [r4, #16]
 8000f2c:	6861      	ldr	r1, [r4, #4]
 8000f2e:	4299      	cmp	r1, r3
 8000f30:	bfde      	ittt	le
 8000f32:	2330      	movle	r3, #48	@ 0x30
 8000f34:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000f38:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000f3c:	1b92      	subs	r2, r2, r6
 8000f3e:	6122      	str	r2, [r4, #16]
 8000f40:	f8cd a000 	str.w	sl, [sp]
 8000f44:	464b      	mov	r3, r9
 8000f46:	aa03      	add	r2, sp, #12
 8000f48:	4621      	mov	r1, r4
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f7ff fee6 	bl	8000d1c <_printf_common>
 8000f50:	3001      	adds	r0, #1
 8000f52:	d14a      	bne.n	8000fea <_printf_i+0x1f2>
 8000f54:	f04f 30ff 	mov.w	r0, #4294967295
 8000f58:	b004      	add	sp, #16
 8000f5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f5e:	6823      	ldr	r3, [r4, #0]
 8000f60:	f043 0320 	orr.w	r3, r3, #32
 8000f64:	6023      	str	r3, [r4, #0]
 8000f66:	4833      	ldr	r0, [pc, #204]	@ (8001034 <_printf_i+0x23c>)
 8000f68:	2778      	movs	r7, #120	@ 0x78
 8000f6a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	6831      	ldr	r1, [r6, #0]
 8000f72:	061f      	lsls	r7, r3, #24
 8000f74:	f851 5b04 	ldr.w	r5, [r1], #4
 8000f78:	d402      	bmi.n	8000f80 <_printf_i+0x188>
 8000f7a:	065f      	lsls	r7, r3, #25
 8000f7c:	bf48      	it	mi
 8000f7e:	b2ad      	uxthmi	r5, r5
 8000f80:	6031      	str	r1, [r6, #0]
 8000f82:	07d9      	lsls	r1, r3, #31
 8000f84:	bf44      	itt	mi
 8000f86:	f043 0320 	orrmi.w	r3, r3, #32
 8000f8a:	6023      	strmi	r3, [r4, #0]
 8000f8c:	b11d      	cbz	r5, 8000f96 <_printf_i+0x19e>
 8000f8e:	2310      	movs	r3, #16
 8000f90:	e7ac      	b.n	8000eec <_printf_i+0xf4>
 8000f92:	4827      	ldr	r0, [pc, #156]	@ (8001030 <_printf_i+0x238>)
 8000f94:	e7e9      	b.n	8000f6a <_printf_i+0x172>
 8000f96:	6823      	ldr	r3, [r4, #0]
 8000f98:	f023 0320 	bic.w	r3, r3, #32
 8000f9c:	6023      	str	r3, [r4, #0]
 8000f9e:	e7f6      	b.n	8000f8e <_printf_i+0x196>
 8000fa0:	4616      	mov	r6, r2
 8000fa2:	e7bd      	b.n	8000f20 <_printf_i+0x128>
 8000fa4:	6833      	ldr	r3, [r6, #0]
 8000fa6:	6825      	ldr	r5, [r4, #0]
 8000fa8:	6961      	ldr	r1, [r4, #20]
 8000faa:	1d18      	adds	r0, r3, #4
 8000fac:	6030      	str	r0, [r6, #0]
 8000fae:	062e      	lsls	r6, r5, #24
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	d501      	bpl.n	8000fb8 <_printf_i+0x1c0>
 8000fb4:	6019      	str	r1, [r3, #0]
 8000fb6:	e002      	b.n	8000fbe <_printf_i+0x1c6>
 8000fb8:	0668      	lsls	r0, r5, #25
 8000fba:	d5fb      	bpl.n	8000fb4 <_printf_i+0x1bc>
 8000fbc:	8019      	strh	r1, [r3, #0]
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	6123      	str	r3, [r4, #16]
 8000fc2:	4616      	mov	r6, r2
 8000fc4:	e7bc      	b.n	8000f40 <_printf_i+0x148>
 8000fc6:	6833      	ldr	r3, [r6, #0]
 8000fc8:	1d1a      	adds	r2, r3, #4
 8000fca:	6032      	str	r2, [r6, #0]
 8000fcc:	681e      	ldr	r6, [r3, #0]
 8000fce:	6862      	ldr	r2, [r4, #4]
 8000fd0:	2100      	movs	r1, #0
 8000fd2:	4630      	mov	r0, r6
 8000fd4:	f7ff f91c 	bl	8000210 <memchr>
 8000fd8:	b108      	cbz	r0, 8000fde <_printf_i+0x1e6>
 8000fda:	1b80      	subs	r0, r0, r6
 8000fdc:	6060      	str	r0, [r4, #4]
 8000fde:	6863      	ldr	r3, [r4, #4]
 8000fe0:	6123      	str	r3, [r4, #16]
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fe8:	e7aa      	b.n	8000f40 <_printf_i+0x148>
 8000fea:	6923      	ldr	r3, [r4, #16]
 8000fec:	4632      	mov	r2, r6
 8000fee:	4649      	mov	r1, r9
 8000ff0:	4640      	mov	r0, r8
 8000ff2:	47d0      	blx	sl
 8000ff4:	3001      	adds	r0, #1
 8000ff6:	d0ad      	beq.n	8000f54 <_printf_i+0x15c>
 8000ff8:	6823      	ldr	r3, [r4, #0]
 8000ffa:	079b      	lsls	r3, r3, #30
 8000ffc:	d413      	bmi.n	8001026 <_printf_i+0x22e>
 8000ffe:	68e0      	ldr	r0, [r4, #12]
 8001000:	9b03      	ldr	r3, [sp, #12]
 8001002:	4298      	cmp	r0, r3
 8001004:	bfb8      	it	lt
 8001006:	4618      	movlt	r0, r3
 8001008:	e7a6      	b.n	8000f58 <_printf_i+0x160>
 800100a:	2301      	movs	r3, #1
 800100c:	4632      	mov	r2, r6
 800100e:	4649      	mov	r1, r9
 8001010:	4640      	mov	r0, r8
 8001012:	47d0      	blx	sl
 8001014:	3001      	adds	r0, #1
 8001016:	d09d      	beq.n	8000f54 <_printf_i+0x15c>
 8001018:	3501      	adds	r5, #1
 800101a:	68e3      	ldr	r3, [r4, #12]
 800101c:	9903      	ldr	r1, [sp, #12]
 800101e:	1a5b      	subs	r3, r3, r1
 8001020:	42ab      	cmp	r3, r5
 8001022:	dcf2      	bgt.n	800100a <_printf_i+0x212>
 8001024:	e7eb      	b.n	8000ffe <_printf_i+0x206>
 8001026:	2500      	movs	r5, #0
 8001028:	f104 0619 	add.w	r6, r4, #25
 800102c:	e7f5      	b.n	800101a <_printf_i+0x222>
 800102e:	bf00      	nop
 8001030:	0800142f 	.word	0x0800142f
 8001034:	08001440 	.word	0x08001440

08001038 <__sflush_r>:
 8001038:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800103c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001040:	0716      	lsls	r6, r2, #28
 8001042:	4605      	mov	r5, r0
 8001044:	460c      	mov	r4, r1
 8001046:	d454      	bmi.n	80010f2 <__sflush_r+0xba>
 8001048:	684b      	ldr	r3, [r1, #4]
 800104a:	2b00      	cmp	r3, #0
 800104c:	dc02      	bgt.n	8001054 <__sflush_r+0x1c>
 800104e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001050:	2b00      	cmp	r3, #0
 8001052:	dd48      	ble.n	80010e6 <__sflush_r+0xae>
 8001054:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001056:	2e00      	cmp	r6, #0
 8001058:	d045      	beq.n	80010e6 <__sflush_r+0xae>
 800105a:	2300      	movs	r3, #0
 800105c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001060:	682f      	ldr	r7, [r5, #0]
 8001062:	6a21      	ldr	r1, [r4, #32]
 8001064:	602b      	str	r3, [r5, #0]
 8001066:	d030      	beq.n	80010ca <__sflush_r+0x92>
 8001068:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800106a:	89a3      	ldrh	r3, [r4, #12]
 800106c:	0759      	lsls	r1, r3, #29
 800106e:	d505      	bpl.n	800107c <__sflush_r+0x44>
 8001070:	6863      	ldr	r3, [r4, #4]
 8001072:	1ad2      	subs	r2, r2, r3
 8001074:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001076:	b10b      	cbz	r3, 800107c <__sflush_r+0x44>
 8001078:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800107a:	1ad2      	subs	r2, r2, r3
 800107c:	2300      	movs	r3, #0
 800107e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001080:	6a21      	ldr	r1, [r4, #32]
 8001082:	4628      	mov	r0, r5
 8001084:	47b0      	blx	r6
 8001086:	1c43      	adds	r3, r0, #1
 8001088:	89a3      	ldrh	r3, [r4, #12]
 800108a:	d106      	bne.n	800109a <__sflush_r+0x62>
 800108c:	6829      	ldr	r1, [r5, #0]
 800108e:	291d      	cmp	r1, #29
 8001090:	d82b      	bhi.n	80010ea <__sflush_r+0xb2>
 8001092:	4a2a      	ldr	r2, [pc, #168]	@ (800113c <__sflush_r+0x104>)
 8001094:	410a      	asrs	r2, r1
 8001096:	07d6      	lsls	r6, r2, #31
 8001098:	d427      	bmi.n	80010ea <__sflush_r+0xb2>
 800109a:	2200      	movs	r2, #0
 800109c:	6062      	str	r2, [r4, #4]
 800109e:	04d9      	lsls	r1, r3, #19
 80010a0:	6922      	ldr	r2, [r4, #16]
 80010a2:	6022      	str	r2, [r4, #0]
 80010a4:	d504      	bpl.n	80010b0 <__sflush_r+0x78>
 80010a6:	1c42      	adds	r2, r0, #1
 80010a8:	d101      	bne.n	80010ae <__sflush_r+0x76>
 80010aa:	682b      	ldr	r3, [r5, #0]
 80010ac:	b903      	cbnz	r3, 80010b0 <__sflush_r+0x78>
 80010ae:	6560      	str	r0, [r4, #84]	@ 0x54
 80010b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010b2:	602f      	str	r7, [r5, #0]
 80010b4:	b1b9      	cbz	r1, 80010e6 <__sflush_r+0xae>
 80010b6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010ba:	4299      	cmp	r1, r3
 80010bc:	d002      	beq.n	80010c4 <__sflush_r+0x8c>
 80010be:	4628      	mov	r0, r5
 80010c0:	f7ff fbf2 	bl	80008a8 <_free_r>
 80010c4:	2300      	movs	r3, #0
 80010c6:	6363      	str	r3, [r4, #52]	@ 0x34
 80010c8:	e00d      	b.n	80010e6 <__sflush_r+0xae>
 80010ca:	2301      	movs	r3, #1
 80010cc:	4628      	mov	r0, r5
 80010ce:	47b0      	blx	r6
 80010d0:	4602      	mov	r2, r0
 80010d2:	1c50      	adds	r0, r2, #1
 80010d4:	d1c9      	bne.n	800106a <__sflush_r+0x32>
 80010d6:	682b      	ldr	r3, [r5, #0]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d0c6      	beq.n	800106a <__sflush_r+0x32>
 80010dc:	2b1d      	cmp	r3, #29
 80010de:	d001      	beq.n	80010e4 <__sflush_r+0xac>
 80010e0:	2b16      	cmp	r3, #22
 80010e2:	d11e      	bne.n	8001122 <__sflush_r+0xea>
 80010e4:	602f      	str	r7, [r5, #0]
 80010e6:	2000      	movs	r0, #0
 80010e8:	e022      	b.n	8001130 <__sflush_r+0xf8>
 80010ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010ee:	b21b      	sxth	r3, r3
 80010f0:	e01b      	b.n	800112a <__sflush_r+0xf2>
 80010f2:	690f      	ldr	r7, [r1, #16]
 80010f4:	2f00      	cmp	r7, #0
 80010f6:	d0f6      	beq.n	80010e6 <__sflush_r+0xae>
 80010f8:	0793      	lsls	r3, r2, #30
 80010fa:	680e      	ldr	r6, [r1, #0]
 80010fc:	bf08      	it	eq
 80010fe:	694b      	ldreq	r3, [r1, #20]
 8001100:	600f      	str	r7, [r1, #0]
 8001102:	bf18      	it	ne
 8001104:	2300      	movne	r3, #0
 8001106:	eba6 0807 	sub.w	r8, r6, r7
 800110a:	608b      	str	r3, [r1, #8]
 800110c:	f1b8 0f00 	cmp.w	r8, #0
 8001110:	dde9      	ble.n	80010e6 <__sflush_r+0xae>
 8001112:	6a21      	ldr	r1, [r4, #32]
 8001114:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001116:	4643      	mov	r3, r8
 8001118:	463a      	mov	r2, r7
 800111a:	4628      	mov	r0, r5
 800111c:	47b0      	blx	r6
 800111e:	2800      	cmp	r0, #0
 8001120:	dc08      	bgt.n	8001134 <__sflush_r+0xfc>
 8001122:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001126:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800112a:	81a3      	strh	r3, [r4, #12]
 800112c:	f04f 30ff 	mov.w	r0, #4294967295
 8001130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001134:	4407      	add	r7, r0
 8001136:	eba8 0800 	sub.w	r8, r8, r0
 800113a:	e7e7      	b.n	800110c <__sflush_r+0xd4>
 800113c:	dfbffffe 	.word	0xdfbffffe

08001140 <_fflush_r>:
 8001140:	b538      	push	{r3, r4, r5, lr}
 8001142:	690b      	ldr	r3, [r1, #16]
 8001144:	4605      	mov	r5, r0
 8001146:	460c      	mov	r4, r1
 8001148:	b913      	cbnz	r3, 8001150 <_fflush_r+0x10>
 800114a:	2500      	movs	r5, #0
 800114c:	4628      	mov	r0, r5
 800114e:	bd38      	pop	{r3, r4, r5, pc}
 8001150:	b118      	cbz	r0, 800115a <_fflush_r+0x1a>
 8001152:	6a03      	ldr	r3, [r0, #32]
 8001154:	b90b      	cbnz	r3, 800115a <_fflush_r+0x1a>
 8001156:	f7ff fa9f 	bl	8000698 <__sinit>
 800115a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115e:	2b00      	cmp	r3, #0
 8001160:	d0f3      	beq.n	800114a <_fflush_r+0xa>
 8001162:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001164:	07d0      	lsls	r0, r2, #31
 8001166:	d404      	bmi.n	8001172 <_fflush_r+0x32>
 8001168:	0599      	lsls	r1, r3, #22
 800116a:	d402      	bmi.n	8001172 <_fflush_r+0x32>
 800116c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800116e:	f7ff fb98 	bl	80008a2 <__retarget_lock_acquire_recursive>
 8001172:	4628      	mov	r0, r5
 8001174:	4621      	mov	r1, r4
 8001176:	f7ff ff5f 	bl	8001038 <__sflush_r>
 800117a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800117c:	07da      	lsls	r2, r3, #31
 800117e:	4605      	mov	r5, r0
 8001180:	d4e4      	bmi.n	800114c <_fflush_r+0xc>
 8001182:	89a3      	ldrh	r3, [r4, #12]
 8001184:	059b      	lsls	r3, r3, #22
 8001186:	d4e1      	bmi.n	800114c <_fflush_r+0xc>
 8001188:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800118a:	f7ff fb8b 	bl	80008a4 <__retarget_lock_release_recursive>
 800118e:	e7dd      	b.n	800114c <_fflush_r+0xc>

08001190 <__swbuf_r>:
 8001190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001192:	460e      	mov	r6, r1
 8001194:	4614      	mov	r4, r2
 8001196:	4605      	mov	r5, r0
 8001198:	b118      	cbz	r0, 80011a2 <__swbuf_r+0x12>
 800119a:	6a03      	ldr	r3, [r0, #32]
 800119c:	b90b      	cbnz	r3, 80011a2 <__swbuf_r+0x12>
 800119e:	f7ff fa7b 	bl	8000698 <__sinit>
 80011a2:	69a3      	ldr	r3, [r4, #24]
 80011a4:	60a3      	str	r3, [r4, #8]
 80011a6:	89a3      	ldrh	r3, [r4, #12]
 80011a8:	071a      	lsls	r2, r3, #28
 80011aa:	d501      	bpl.n	80011b0 <__swbuf_r+0x20>
 80011ac:	6923      	ldr	r3, [r4, #16]
 80011ae:	b943      	cbnz	r3, 80011c2 <__swbuf_r+0x32>
 80011b0:	4621      	mov	r1, r4
 80011b2:	4628      	mov	r0, r5
 80011b4:	f000 f82a 	bl	800120c <__swsetup_r>
 80011b8:	b118      	cbz	r0, 80011c2 <__swbuf_r+0x32>
 80011ba:	f04f 37ff 	mov.w	r7, #4294967295
 80011be:	4638      	mov	r0, r7
 80011c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011c2:	6823      	ldr	r3, [r4, #0]
 80011c4:	6922      	ldr	r2, [r4, #16]
 80011c6:	1a98      	subs	r0, r3, r2
 80011c8:	6963      	ldr	r3, [r4, #20]
 80011ca:	b2f6      	uxtb	r6, r6
 80011cc:	4283      	cmp	r3, r0
 80011ce:	4637      	mov	r7, r6
 80011d0:	dc05      	bgt.n	80011de <__swbuf_r+0x4e>
 80011d2:	4621      	mov	r1, r4
 80011d4:	4628      	mov	r0, r5
 80011d6:	f7ff ffb3 	bl	8001140 <_fflush_r>
 80011da:	2800      	cmp	r0, #0
 80011dc:	d1ed      	bne.n	80011ba <__swbuf_r+0x2a>
 80011de:	68a3      	ldr	r3, [r4, #8]
 80011e0:	3b01      	subs	r3, #1
 80011e2:	60a3      	str	r3, [r4, #8]
 80011e4:	6823      	ldr	r3, [r4, #0]
 80011e6:	1c5a      	adds	r2, r3, #1
 80011e8:	6022      	str	r2, [r4, #0]
 80011ea:	701e      	strb	r6, [r3, #0]
 80011ec:	6962      	ldr	r2, [r4, #20]
 80011ee:	1c43      	adds	r3, r0, #1
 80011f0:	429a      	cmp	r2, r3
 80011f2:	d004      	beq.n	80011fe <__swbuf_r+0x6e>
 80011f4:	89a3      	ldrh	r3, [r4, #12]
 80011f6:	07db      	lsls	r3, r3, #31
 80011f8:	d5e1      	bpl.n	80011be <__swbuf_r+0x2e>
 80011fa:	2e0a      	cmp	r6, #10
 80011fc:	d1df      	bne.n	80011be <__swbuf_r+0x2e>
 80011fe:	4621      	mov	r1, r4
 8001200:	4628      	mov	r0, r5
 8001202:	f7ff ff9d 	bl	8001140 <_fflush_r>
 8001206:	2800      	cmp	r0, #0
 8001208:	d0d9      	beq.n	80011be <__swbuf_r+0x2e>
 800120a:	e7d6      	b.n	80011ba <__swbuf_r+0x2a>

0800120c <__swsetup_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	4b29      	ldr	r3, [pc, #164]	@ (80012b4 <__swsetup_r+0xa8>)
 8001210:	4605      	mov	r5, r0
 8001212:	6818      	ldr	r0, [r3, #0]
 8001214:	460c      	mov	r4, r1
 8001216:	b118      	cbz	r0, 8001220 <__swsetup_r+0x14>
 8001218:	6a03      	ldr	r3, [r0, #32]
 800121a:	b90b      	cbnz	r3, 8001220 <__swsetup_r+0x14>
 800121c:	f7ff fa3c 	bl	8000698 <__sinit>
 8001220:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001224:	0719      	lsls	r1, r3, #28
 8001226:	d422      	bmi.n	800126e <__swsetup_r+0x62>
 8001228:	06da      	lsls	r2, r3, #27
 800122a:	d407      	bmi.n	800123c <__swsetup_r+0x30>
 800122c:	2209      	movs	r2, #9
 800122e:	602a      	str	r2, [r5, #0]
 8001230:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001234:	81a3      	strh	r3, [r4, #12]
 8001236:	f04f 30ff 	mov.w	r0, #4294967295
 800123a:	e033      	b.n	80012a4 <__swsetup_r+0x98>
 800123c:	0758      	lsls	r0, r3, #29
 800123e:	d512      	bpl.n	8001266 <__swsetup_r+0x5a>
 8001240:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001242:	b141      	cbz	r1, 8001256 <__swsetup_r+0x4a>
 8001244:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001248:	4299      	cmp	r1, r3
 800124a:	d002      	beq.n	8001252 <__swsetup_r+0x46>
 800124c:	4628      	mov	r0, r5
 800124e:	f7ff fb2b 	bl	80008a8 <_free_r>
 8001252:	2300      	movs	r3, #0
 8001254:	6363      	str	r3, [r4, #52]	@ 0x34
 8001256:	89a3      	ldrh	r3, [r4, #12]
 8001258:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800125c:	81a3      	strh	r3, [r4, #12]
 800125e:	2300      	movs	r3, #0
 8001260:	6063      	str	r3, [r4, #4]
 8001262:	6923      	ldr	r3, [r4, #16]
 8001264:	6023      	str	r3, [r4, #0]
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	f043 0308 	orr.w	r3, r3, #8
 800126c:	81a3      	strh	r3, [r4, #12]
 800126e:	6923      	ldr	r3, [r4, #16]
 8001270:	b94b      	cbnz	r3, 8001286 <__swsetup_r+0x7a>
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001278:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800127c:	d003      	beq.n	8001286 <__swsetup_r+0x7a>
 800127e:	4621      	mov	r1, r4
 8001280:	4628      	mov	r0, r5
 8001282:	f000 f84f 	bl	8001324 <__smakebuf_r>
 8001286:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800128a:	f013 0201 	ands.w	r2, r3, #1
 800128e:	d00a      	beq.n	80012a6 <__swsetup_r+0x9a>
 8001290:	2200      	movs	r2, #0
 8001292:	60a2      	str	r2, [r4, #8]
 8001294:	6962      	ldr	r2, [r4, #20]
 8001296:	4252      	negs	r2, r2
 8001298:	61a2      	str	r2, [r4, #24]
 800129a:	6922      	ldr	r2, [r4, #16]
 800129c:	b942      	cbnz	r2, 80012b0 <__swsetup_r+0xa4>
 800129e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80012a2:	d1c5      	bne.n	8001230 <__swsetup_r+0x24>
 80012a4:	bd38      	pop	{r3, r4, r5, pc}
 80012a6:	0799      	lsls	r1, r3, #30
 80012a8:	bf58      	it	pl
 80012aa:	6962      	ldrpl	r2, [r4, #20]
 80012ac:	60a2      	str	r2, [r4, #8]
 80012ae:	e7f4      	b.n	800129a <__swsetup_r+0x8e>
 80012b0:	2000      	movs	r0, #0
 80012b2:	e7f7      	b.n	80012a4 <__swsetup_r+0x98>
 80012b4:	2000000c 	.word	0x2000000c

080012b8 <_sbrk_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d06      	ldr	r5, [pc, #24]	@ (80012d4 <_sbrk_r+0x1c>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	602b      	str	r3, [r5, #0]
 80012c4:	f7ff f8fc 	bl	80004c0 <_sbrk>
 80012c8:	1c43      	adds	r3, r0, #1
 80012ca:	d102      	bne.n	80012d2 <_sbrk_r+0x1a>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	b103      	cbz	r3, 80012d2 <_sbrk_r+0x1a>
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	200001b8 	.word	0x200001b8

080012d8 <__swhatbuf_r>:
 80012d8:	b570      	push	{r4, r5, r6, lr}
 80012da:	460c      	mov	r4, r1
 80012dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e0:	2900      	cmp	r1, #0
 80012e2:	b096      	sub	sp, #88	@ 0x58
 80012e4:	4615      	mov	r5, r2
 80012e6:	461e      	mov	r6, r3
 80012e8:	da0d      	bge.n	8001306 <__swhatbuf_r+0x2e>
 80012ea:	89a3      	ldrh	r3, [r4, #12]
 80012ec:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012f0:	f04f 0100 	mov.w	r1, #0
 80012f4:	bf14      	ite	ne
 80012f6:	2340      	movne	r3, #64	@ 0x40
 80012f8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012fc:	2000      	movs	r0, #0
 80012fe:	6031      	str	r1, [r6, #0]
 8001300:	602b      	str	r3, [r5, #0]
 8001302:	b016      	add	sp, #88	@ 0x58
 8001304:	bd70      	pop	{r4, r5, r6, pc}
 8001306:	466a      	mov	r2, sp
 8001308:	f000 f848 	bl	800139c <_fstat_r>
 800130c:	2800      	cmp	r0, #0
 800130e:	dbec      	blt.n	80012ea <__swhatbuf_r+0x12>
 8001310:	9901      	ldr	r1, [sp, #4]
 8001312:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001316:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800131a:	4259      	negs	r1, r3
 800131c:	4159      	adcs	r1, r3
 800131e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001322:	e7eb      	b.n	80012fc <__swhatbuf_r+0x24>

08001324 <__smakebuf_r>:
 8001324:	898b      	ldrh	r3, [r1, #12]
 8001326:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001328:	079d      	lsls	r5, r3, #30
 800132a:	4606      	mov	r6, r0
 800132c:	460c      	mov	r4, r1
 800132e:	d507      	bpl.n	8001340 <__smakebuf_r+0x1c>
 8001330:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001334:	6023      	str	r3, [r4, #0]
 8001336:	6123      	str	r3, [r4, #16]
 8001338:	2301      	movs	r3, #1
 800133a:	6163      	str	r3, [r4, #20]
 800133c:	b003      	add	sp, #12
 800133e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001340:	ab01      	add	r3, sp, #4
 8001342:	466a      	mov	r2, sp
 8001344:	f7ff ffc8 	bl	80012d8 <__swhatbuf_r>
 8001348:	9f00      	ldr	r7, [sp, #0]
 800134a:	4605      	mov	r5, r0
 800134c:	4639      	mov	r1, r7
 800134e:	4630      	mov	r0, r6
 8001350:	f7ff fb16 	bl	8000980 <_malloc_r>
 8001354:	b948      	cbnz	r0, 800136a <__smakebuf_r+0x46>
 8001356:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135a:	059a      	lsls	r2, r3, #22
 800135c:	d4ee      	bmi.n	800133c <__smakebuf_r+0x18>
 800135e:	f023 0303 	bic.w	r3, r3, #3
 8001362:	f043 0302 	orr.w	r3, r3, #2
 8001366:	81a3      	strh	r3, [r4, #12]
 8001368:	e7e2      	b.n	8001330 <__smakebuf_r+0xc>
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	6020      	str	r0, [r4, #0]
 800136e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001372:	81a3      	strh	r3, [r4, #12]
 8001374:	9b01      	ldr	r3, [sp, #4]
 8001376:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800137a:	b15b      	cbz	r3, 8001394 <__smakebuf_r+0x70>
 800137c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001380:	4630      	mov	r0, r6
 8001382:	f000 f81d 	bl	80013c0 <_isatty_r>
 8001386:	b128      	cbz	r0, 8001394 <__smakebuf_r+0x70>
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	f023 0303 	bic.w	r3, r3, #3
 800138e:	f043 0301 	orr.w	r3, r3, #1
 8001392:	81a3      	strh	r3, [r4, #12]
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	431d      	orrs	r5, r3
 8001398:	81a5      	strh	r5, [r4, #12]
 800139a:	e7cf      	b.n	800133c <__smakebuf_r+0x18>

0800139c <_fstat_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	4d07      	ldr	r5, [pc, #28]	@ (80013bc <_fstat_r+0x20>)
 80013a0:	2300      	movs	r3, #0
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	4611      	mov	r1, r2
 80013a8:	602b      	str	r3, [r5, #0]
 80013aa:	f7ff f860 	bl	800046e <_fstat>
 80013ae:	1c43      	adds	r3, r0, #1
 80013b0:	d102      	bne.n	80013b8 <_fstat_r+0x1c>
 80013b2:	682b      	ldr	r3, [r5, #0]
 80013b4:	b103      	cbz	r3, 80013b8 <_fstat_r+0x1c>
 80013b6:	6023      	str	r3, [r4, #0]
 80013b8:	bd38      	pop	{r3, r4, r5, pc}
 80013ba:	bf00      	nop
 80013bc:	200001b8 	.word	0x200001b8

080013c0 <_isatty_r>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	4d06      	ldr	r5, [pc, #24]	@ (80013dc <_isatty_r+0x1c>)
 80013c4:	2300      	movs	r3, #0
 80013c6:	4604      	mov	r4, r0
 80013c8:	4608      	mov	r0, r1
 80013ca:	602b      	str	r3, [r5, #0]
 80013cc:	f7ff f85f 	bl	800048e <_isatty>
 80013d0:	1c43      	adds	r3, r0, #1
 80013d2:	d102      	bne.n	80013da <_isatty_r+0x1a>
 80013d4:	682b      	ldr	r3, [r5, #0]
 80013d6:	b103      	cbz	r3, 80013da <_isatty_r+0x1a>
 80013d8:	6023      	str	r3, [r4, #0]
 80013da:	bd38      	pop	{r3, r4, r5, pc}
 80013dc:	200001b8 	.word	0x200001b8

080013e0 <_init>:
 80013e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013e2:	bf00      	nop
 80013e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e6:	bc08      	pop	{r3}
 80013e8:	469e      	mov	lr, r3
 80013ea:	4770      	bx	lr

080013ec <_fini>:
 80013ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ee:	bf00      	nop
 80013f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013f2:	bc08      	pop	{r3}
 80013f4:	469e      	mov	lr, r3
 80013f6:	4770      	bx	lr
