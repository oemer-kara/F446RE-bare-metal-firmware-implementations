/*
 * uart.h
 *
 *  Created on: Jun 13, 2024
 *      Author: oemerkara
 */

#ifndef UART_H_
#define UART_H_

#include "stm32f446xx.h"
#include <stdint.h>

#define __IO volatile

#define PERIPH_BASE           0x40000000UL
#define APB1PERIPH_BASE       PERIPH_BASE
#define USART2_BASE           (APB1PERIPH_BASE + 0x4400UL)
#define USART2                ((USART_TypeDef *) USART2_BASE)


#define AHB1PERIPH_BASE       (PERIPH_BASE + 0x00020000UL)
#define GPIOA_BASE            (AHB1PERIPH_BASE + 0x0000UL)


typedef struct
{
  __IO uint32_t MODER;
  __IO uint32_t OTYPER;
  __IO uint32_t OSPEEDR;
  __IO uint32_t PUPDR;
  __IO uint32_t IDR;
  __IO uint32_t ODR;
  __IO uint32_t BSRR;
  __IO uint32_t LCKR;
  __IO uint32_t AFR[2];
} GPIO_TypeDef;


typedef struct
{
  __IO uint32_t SR;         /*!< USART Status register,                   Address offset: 0x00 */
  __IO uint32_t DR;         /*!< USART Data register,                     Address offset: 0x04 */
  __IO uint32_t BRR;        /*!< USART Baud rate register,                Address offset: 0x08 */
  __IO uint32_t CR1;        /*!< USART Control register 1,                Address offset: 0x0C */
  __IO uint32_t CR2;        /*!< USART Control register 2,                Address offset: 0x10 */
  __IO uint32_t CR3;        /*!< USART Control register 3,                Address offset: 0x14 */
  __IO uint32_t GTPR;       /*!< USART Guard time and prescaler register, Address offset: 0x18 */
} USART_TypeDef;

#define GPIOA_EN      (1U << 0)
#define USART2_EN     (1U << 17)

#define SYS_FREQ      16000000
#define APB1_CLK      SYS_FREQ     // Assuming no prescalers are used
#define UART_BAUDRATE 115200

#define CR1_TE        (1U << 3)
#define CR1_UE        (1U << 13)
#define CR1_RE        (1U << 2)

#define SR_TXE        (1U << 7)
#define SR_RXNE			(1U << 5)

char uart2_read();
int __io_putchar(int ch);
uint16_t compute_uart_baud_rate(uint32_t peripheral_clock, uint32_t baud_rate);
void uart_set_baud_rate(USART_TypeDef* usart_tx, uint32_t peripheral_clock, uint32_t baud_rate);
void uart2_txrx_init( );
void uart2_write(int ch);
#endif /* UART_H_ */
